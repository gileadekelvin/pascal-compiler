/*
 * generated by Xtext 2.15.0
 */
parser grammar InternalPascalParser;

options {
	tokenVocab=InternalPascalLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.xtext.compiler.pascal.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.compiler.pascal.services.PascalGrammarAccess;

}
@members {
	private PascalGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("CommercialAt", "'@'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("CircumflexAccent", "'^'");
		tokenNameToValue.put("LeftParenthesisFullStop", "'(.'");
		tokenNameToValue.put("FullStopRightParenthesis", "'.)'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("End", "'end'");
		tokenNameToValue.put("Var", "'var'");
		tokenNameToValue.put("Case", "'case'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("Array", "'array'");
		tokenNameToValue.put("Begin", "'begin'");
		tokenNameToValue.put("Const", "'const'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("Boolean", "'boolean'");
		tokenNameToValue.put("Integer", "'integer'");
		tokenNameToValue.put("Program", "'program'");
		tokenNameToValue.put("Function", "'function'");
		tokenNameToValue.put("Procedure", "'procedure'");
	}

	public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRulepascal
entryRulepascal
:
{ before(grammarAccess.getPascalRule()); }
	 rulepascal
{ after(grammarAccess.getPascalRule()); } 
	 EOF 
;

// Rule pascal
rulepascal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPascalAccess().getProgramAssignment()); }
		(rule__Pascal__ProgramAssignment)
		{ after(grammarAccess.getPascalAccess().getProgramAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprogram
entryRuleprogram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleprogram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule program
ruleprogram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprogram_heading_block
entryRuleprogram_heading_block
:
{ before(grammarAccess.getProgram_heading_blockRule()); }
	 ruleprogram_heading_block
{ after(grammarAccess.getProgram_heading_blockRule()); } 
	 EOF 
;

// Rule program_heading_block
ruleprogram_heading_block 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
		(rule__Program_heading_block__Group__0)
		{ after(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier_list
entryRuleidentifier_list
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleidentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule identifier_list
ruleidentifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
		(rule__Identifier_list__Group__0)
		{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier
entryRuleidentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleidentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule identifier
ruleidentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getIdAssignment()); }
		(rule__Identifier__IdAssignment)
		{ after(grammarAccess.getIdentifierAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock
entryRuleblock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_definition_part
entryRuleconstant_definition_part
:
{ before(grammarAccess.getConstant_definition_partRule()); }
	 ruleconstant_definition_part
{ after(grammarAccess.getConstant_definition_partRule()); } 
	 EOF 
;

// Rule constant_definition_part
ruleconstant_definition_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup()); }
		(rule__Constant_definition_part__Group__0)
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_definition
entryRuleconstant_definition
:
{ before(grammarAccess.getConstant_definitionRule()); }
	 ruleconstant_definition
{ after(grammarAccess.getConstant_definitionRule()); } 
	 EOF 
;

// Rule constant_definition
ruleconstant_definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_definitionAccess().getGroup()); }
		(rule__Constant_definition__Group__0)
		{ after(grammarAccess.getConstant_definitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant
entryRuleconstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleconstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule constant
ruleconstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_definition_part
entryRuletype_definition_part
:
{ before(grammarAccess.getType_definition_partRule()); }
	 ruletype_definition_part
{ after(grammarAccess.getType_definition_partRule()); } 
	 EOF 
;

// Rule type_definition_part
ruletype_definition_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_definition_partAccess().getGroup()); }
		(rule__Type_definition_part__Group__0)
		{ after(grammarAccess.getType_definition_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_definition
entryRuletype_definition
:
{ before(grammarAccess.getType_definitionRule()); }
	 ruletype_definition
{ after(grammarAccess.getType_definitionRule()); } 
	 EOF 
;

// Rule type_definition
ruletype_definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_definitionAccess().getGroup()); }
		(rule__Type_definition__Group__0)
		{ after(grammarAccess.getType_definitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_declaration_part
entryRulevariable_declaration_part
:
{ before(grammarAccess.getVariable_declaration_partRule()); }
	 rulevariable_declaration_part
{ after(grammarAccess.getVariable_declaration_partRule()); } 
	 EOF 
;

// Rule variable_declaration_part
rulevariable_declaration_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
		(rule__Variable_declaration_part__Group__0)
		{ after(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_declaration
entryRulevariable_declaration
:
{ before(grammarAccess.getVariable_declarationRule()); }
	 rulevariable_declaration
{ after(grammarAccess.getVariable_declarationRule()); } 
	 EOF 
;

// Rule variable_declaration
rulevariable_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_declarationAccess().getGroup()); }
		(rule__Variable_declaration__Group__0)
		{ after(grammarAccess.getVariable_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompound_statement
entryRulecompound_statement
:
{ before(grammarAccess.getCompound_statementRule()); }
	 rulecompound_statement
{ after(grammarAccess.getCompound_statementRule()); } 
	 EOF 
;

// Rule compound_statement
rulecompound_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup()); }
		(rule__Compound_statement__Group__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatements
entryRulestatements
:
{ before(grammarAccess.getStatementsRule()); }
	 rulestatements
{ after(grammarAccess.getStatementsRule()); } 
	 EOF 
;

// Rule statements
rulestatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementsAccess().getGroup()); }
		(rule__Statements__Group__0)
		{ after(grammarAccess.getStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunlabelled_statement
entryRuleunlabelled_statement
:
{ before(grammarAccess.getUnlabelled_statementRule()); }
	 ruleunlabelled_statement
{ after(grammarAccess.getUnlabelled_statementRule()); } 
	 EOF 
;

// Rule unlabelled_statement
ruleunlabelled_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getAlternatives()); }
		(rule__Unlabelled_statement__Alternatives)
		{ after(grammarAccess.getUnlabelled_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_statement
entryRulesimple_statement
:
{ before(grammarAccess.getSimple_statementRule()); }
	 rulesimple_statement
{ after(grammarAccess.getSimple_statementRule()); } 
	 EOF 
;

// Rule simple_statement
rulesimple_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAlternatives()); }
		(rule__Simple_statement__Alternatives)
		{ after(grammarAccess.getSimple_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment_statement
entryRuleassignment_statement
:
{ before(grammarAccess.getAssignment_statementRule()); }
	 ruleassignment_statement
{ after(grammarAccess.getAssignment_statementRule()); } 
	 EOF 
;

// Rule assignment_statement
ruleassignment_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getGroup()); }
		(rule__Assignment_statement__Group__0)
		{ after(grammarAccess.getAssignment_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable
entryRulevariable
:
{ before(grammarAccess.getVariableRule()); }
	 rulevariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule variable
rulevariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getSimpleAssignment()); }
		(rule__Expression__SimpleAssignment)
		{ after(grammarAccess.getExpressionAccess().getSimpleAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_expression
entryRulesimple_expression
:
{ before(grammarAccess.getSimple_expressionRule()); }
	 rulesimple_expression
{ after(grammarAccess.getSimple_expressionRule()); } 
	 EOF 
;

// Rule simple_expression
rulesimple_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getGroup()); }
		(rule__Simple_expression__Group__0)
		{ after(grammarAccess.getSimple_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleterm
entryRuleterm
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesigned_factor
entryRulesigned_factor
:
{ before(grammarAccess.getSigned_factorRule()); }
	 rulesigned_factor
{ after(grammarAccess.getSigned_factorRule()); } 
	 EOF 
;

// Rule signed_factor
rulesigned_factor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSigned_factorAccess().getGroup()); }
		(rule__Signed_factor__Group__0)
		{ after(grammarAccess.getSigned_factorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefactor
entryRulefactor
:
{ before(grammarAccess.getFactorRule()); }
	 rulefactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule factor
rulefactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAlternatives()); }
		(rule__Factor__Alternatives)
		{ after(grammarAccess.getFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype
entryRuletype
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_type
entryRulesimple_type
:
{ before(grammarAccess.getSimple_typeRule()); }
	 rulesimple_type
{ after(grammarAccess.getSimple_typeRule()); } 
	 EOF 
;

// Rule simple_type
rulesimple_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_typeAccess().getAlternatives()); }
		(rule__Simple_type__Alternatives)
		{ after(grammarAccess.getSimple_typeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesubrange_type
entryRulesubrange_type
:
{ before(grammarAccess.getSubrange_typeRule()); }
	 rulesubrange_type
{ after(grammarAccess.getSubrange_typeRule()); } 
	 EOF 
;

// Rule subrange_type
rulesubrange_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubrange_typeAccess().getGroup()); }
		(rule__Subrange_type__Group__0)
		{ after(grammarAccess.getSubrange_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestructured_type
entryRulestructured_type
:
{ before(grammarAccess.getStructured_typeRule()); }
	 rulestructured_type
{ after(grammarAccess.getStructured_typeRule()); } 
	 EOF 
;

// Rule structured_type
rulestructured_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructured_typeAccess().getUnpackedAssignment()); }
		(rule__Structured_type__UnpackedAssignment)
		{ after(grammarAccess.getStructured_typeAccess().getUnpackedAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunpacked_structured_type
entryRuleunpacked_structured_type
:
{ before(grammarAccess.getUnpacked_structured_typeRule()); }
	 ruleunpacked_structured_type
{ after(grammarAccess.getUnpacked_structured_typeRule()); } 
	 EOF 
;

// Rule unpacked_structured_type
ruleunpacked_structured_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnpacked_structured_typeAccess().getAlternatives()); }
		(rule__Unpacked_structured_type__Alternatives)
		{ after(grammarAccess.getUnpacked_structured_typeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledynamic_array_type
entryRuledynamic_array_type
:
{ before(grammarAccess.getDynamic_array_typeRule()); }
	 ruledynamic_array_type
{ after(grammarAccess.getDynamic_array_typeRule()); } 
	 EOF 
;

// Rule dynamic_array_type
ruledynamic_array_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDynamic_array_typeAccess().getGroup()); }
		(rule__Dynamic_array_type__Group__0)
		{ after(grammarAccess.getDynamic_array_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearray_type
entryRulearray_type
:
{ before(grammarAccess.getArray_typeRule()); }
	 rulearray_type
{ after(grammarAccess.getArray_typeRule()); } 
	 EOF 
;

// Rule array_type
rulearray_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArray_typeAccess().getGroup()); }
		(rule__Array_type__Group__0)
		{ after(grammarAccess.getArray_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_list
entryRuletype_list
:
{ before(grammarAccess.getType_listRule()); }
	 ruletype_list
{ after(grammarAccess.getType_listRule()); } 
	 EOF 
;

// Rule type_list
ruletype_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_listAccess().getGroup()); }
		(rule__Type_list__Group__0)
		{ after(grammarAccess.getType_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleindex_type
entryRuleindex_type
:
{ before(grammarAccess.getIndex_typeRule()); }
	 ruleindex_type
{ after(grammarAccess.getIndex_typeRule()); } 
	 EOF 
;

// Rule index_type
ruleindex_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndex_typeAccess().getContentAssignment()); }
		(rule__Index_type__ContentAssignment)
		{ after(grammarAccess.getIndex_typeAccess().getContentAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_identifier
entryRuletype_identifier
:
{ before(grammarAccess.getType_identifierRule()); }
	 ruletype_identifier
{ after(grammarAccess.getType_identifierRule()); } 
	 EOF 
;

// Rule type_identifier
ruletype_identifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_identifierAccess().getAlternatives()); }
		(rule__Type_identifier__Alternatives)
		{ after(grammarAccess.getType_identifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_constant
entryRuleunsigned_constant
:
{ before(grammarAccess.getUnsigned_constantRule()); }
	 ruleunsigned_constant
{ after(grammarAccess.getUnsigned_constantRule()); } 
	 EOF 
;

// Rule unsigned_constant
ruleunsigned_constant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getAlternatives()); }
		(rule__Unsigned_constant__Alternatives)
		{ after(grammarAccess.getUnsigned_constantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_number
entryRuleunsigned_number
:
{ before(grammarAccess.getUnsigned_numberRule()); }
	 ruleunsigned_number
{ after(grammarAccess.getUnsigned_numberRule()); } 
	 EOF 
;

// Rule unsigned_number
ruleunsigned_number 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getNumbersAssignment()); }
		(rule__Unsigned_number__NumbersAssignment)
		{ after(grammarAccess.getUnsigned_numberAccess().getNumbersAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_statement
entryRuleprocedure_statement
:
{ before(grammarAccess.getProcedure_statementRule()); }
	 ruleprocedure_statement
{ after(grammarAccess.getProcedure_statementRule()); } 
	 EOF 
;

// Rule procedure_statement
ruleprocedure_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_statementAccess().getGroup()); }
		(rule__Procedure_statement__Group__0)
		{ after(grammarAccess.getProcedure_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_list
entryRuleparameter_list
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleparameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule parameter_list
ruleparameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_listAccess().getGroup()); }
		(rule__Parameter_list__Group__0)
		{ after(grammarAccess.getParameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleactual_parameter
entryRuleactual_parameter
:
{ before(grammarAccess.getActual_parameterRule()); }
	 ruleactual_parameter
{ after(grammarAccess.getActual_parameterRule()); } 
	 EOF 
;

// Rule actual_parameter
ruleactual_parameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActual_parameterAccess().getContentAssignment()); }
		(rule__Actual_parameter__ContentAssignment)
		{ after(grammarAccess.getActual_parameterAccess().getContentAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestructured_statement
entryRulestructured_statement
:
{ before(grammarAccess.getStructured_statementRule()); }
	 rulestructured_statement
{ after(grammarAccess.getStructured_statementRule()); } 
	 EOF 
;

// Rule structured_statement
rulestructured_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructured_statementAccess().getAlternatives()); }
		(rule__Structured_statement__Alternatives)
		{ after(grammarAccess.getStructured_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconditional_statement
entryRuleconditional_statement
:
{ before(grammarAccess.getConditional_statementRule()); }
	 ruleconditional_statement
{ after(grammarAccess.getConditional_statementRule()); } 
	 EOF 
;

// Rule conditional_statement
ruleconditional_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditional_statementAccess().getCond_statementsAssignment()); }
		(rule__Conditional_statement__Cond_statementsAssignment)
		{ after(grammarAccess.getConditional_statementAccess().getCond_statementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecase_statement
entryRulecase_statement
:
{ before(grammarAccess.getCase_statementRule()); }
	 rulecase_statement
{ after(grammarAccess.getCase_statementRule()); } 
	 EOF 
;

// Rule case_statement
rulecase_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCase_statementAccess().getGroup()); }
		(rule__Case_statement__Group__0)
		{ after(grammarAccess.getCase_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecase_list_element
entryRulecase_list_element
:
{ before(grammarAccess.getCase_list_elementRule()); }
	 rulecase_list_element
{ after(grammarAccess.getCase_list_elementRule()); } 
	 EOF 
;

// Rule case_list_element
rulecase_list_element 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCase_list_elementAccess().getGroup()); }
		(rule__Case_list_element__Group__0)
		{ after(grammarAccess.getCase_list_elementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconst_list
entryRuleconst_list
:
{ before(grammarAccess.getConst_listRule()); }
	 ruleconst_list
{ after(grammarAccess.getConst_listRule()); } 
	 EOF 
;

// Rule const_list
ruleconst_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConst_listAccess().getGroup()); }
		(rule__Const_list__Group__0)
		{ after(grammarAccess.getConst_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_integer
entryRuleunsigned_integer
:
{ before(grammarAccess.getUnsigned_integerRule()); }
	 ruleunsigned_integer
{ after(grammarAccess.getUnsigned_integerRule()); } 
	 EOF 
;

// Rule unsigned_integer
ruleunsigned_integer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_integerAccess().getNUM_INTTerminalRuleCall()); }
		RULE_NUM_INT
		{ after(grammarAccess.getUnsigned_integerAccess().getNUM_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadditive_operator
entryRuleadditive_operator
:
{ before(grammarAccess.getAdditive_operatorRule()); }
	 ruleadditive_operator
{ after(grammarAccess.getAdditive_operatorRule()); } 
	 EOF 
;

// Rule additive_operator
ruleadditive_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getAlternatives()); }
		(rule__Additive_operator__Alternatives)
		{ after(grammarAccess.getAdditive_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemultiplicative_operator
entryRulemultiplicative_operator
:
{ before(grammarAccess.getMultiplicative_operatorRule()); }
	 rulemultiplicative_operator
{ after(grammarAccess.getMultiplicative_operatorRule()); } 
	 EOF 
;

// Rule multiplicative_operator
rulemultiplicative_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getAlternatives()); }
		(rule__Multiplicative_operator__Alternatives)
		{ after(grammarAccess.getMultiplicative_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_and_function_declaration_part
entryRuleprocedure_and_function_declaration_part
:
{ before(grammarAccess.getProcedure_and_function_declaration_partRule()); }
	 ruleprocedure_and_function_declaration_part
{ after(grammarAccess.getProcedure_and_function_declaration_partRule()); } 
	 EOF 
;

// Rule procedure_and_function_declaration_part
ruleprocedure_and_function_declaration_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
		(rule__Procedure_and_function_declaration_part__Group__0)
		{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_or_function_declaration
entryRuleprocedure_or_function_declaration
:
{ before(grammarAccess.getProcedure_or_function_declarationRule()); }
	 ruleprocedure_or_function_declaration
{ after(grammarAccess.getProcedure_or_function_declarationRule()); } 
	 EOF 
;

// Rule procedure_or_function_declaration
ruleprocedure_or_function_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getAlternatives()); }
		(rule__Procedure_or_function_declaration__Alternatives)
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_declaration
entryRuleprocedure_declaration
:
{ before(grammarAccess.getProcedure_declarationRule()); }
	 ruleprocedure_declaration
{ after(grammarAccess.getProcedure_declarationRule()); } 
	 EOF 
;

// Rule procedure_declaration
ruleprocedure_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getGroup()); }
		(rule__Procedure_declaration__Group__0)
		{ after(grammarAccess.getProcedure_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_declaration
entryRulefunction_declaration
:
{ before(grammarAccess.getFunction_declarationRule()); }
	 rulefunction_declaration
{ after(grammarAccess.getFunction_declarationRule()); } 
	 EOF 
;

// Rule function_declaration
rulefunction_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getGroup()); }
		(rule__Function_declaration__Group__0)
		{ after(grammarAccess.getFunction_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_designator
entryRulefunction_designator
:
{ before(grammarAccess.getFunction_designatorRule()); }
	 rulefunction_designator
{ after(grammarAccess.getFunction_designatorRule()); } 
	 EOF 
;

// Rule function_designator
rulefunction_designator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getGroup()); }
		(rule__Function_designator__Group__0)
		{ after(grammarAccess.getFunction_designatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleformal_parameter_list
entryRuleformal_parameter_list
:
{ before(grammarAccess.getFormal_parameter_listRule()); }
	 ruleformal_parameter_list
{ after(grammarAccess.getFormal_parameter_listRule()); } 
	 EOF 
;

// Rule formal_parameter_list
ruleformal_parameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
		(rule__Formal_parameter_list__Group__0)
		{ after(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleformal_parameter_section
entryRuleformal_parameter_section
:
{ before(grammarAccess.getFormal_parameter_sectionRule()); }
	 ruleformal_parameter_section
{ after(grammarAccess.getFormal_parameter_sectionRule()); } 
	 EOF 
;

// Rule formal_parameter_section
ruleformal_parameter_section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
		(rule__Formal_parameter_section__Alternatives)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_group
entryRuleparameter_group
:
{ before(grammarAccess.getParameter_groupRule()); }
	 ruleparameter_group
{ after(grammarAccess.getParameter_groupRule()); } 
	 EOF 
;

// Rule parameter_group
ruleparameter_group 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_groupAccess().getGroup()); }
		(rule__Parameter_group__Group__0)
		{ after(grammarAccess.getParameter_groupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleresult_type
entryRuleresult_type
:
{ before(grammarAccess.getResult_typeRule()); }
	 ruleresult_type
{ after(grammarAccess.getResult_typeRule()); } 
	 EOF 
;

// Rule result_type
ruleresult_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResult_typeAccess().getType_identifierParserRuleCall()); }
		ruletype_identifier
		{ after(grammarAccess.getResult_typeAccess().getType_identifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebool
entryRulebool
:
{ before(grammarAccess.getBoolRule()); }
	 rulebool
{ after(grammarAccess.getBoolRule()); } 
	 EOF 
;

// Rule bool
rulebool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolAccess().getAlternatives()); }
		(rule__Bool__Alternatives)
		{ after(grammarAccess.getBoolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure
entryRuleprocedure
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleprocedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule procedure
ruleprocedure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedureAccess().getProcedureKeyword()); }
		Procedure
		{ after(grammarAccess.getProcedureAccess().getProcedureKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction
entryRulefunction
:
{ before(grammarAccess.getFunctionRule()); }
	 rulefunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule function
rulefunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getFunctionKeyword()); }
		Function
		{ after(grammarAccess.getFunctionAccess().getFunctionKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesign
entryRulesign
:
{ before(grammarAccess.getSignRule()); }
	 rulesign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule sign
rulesign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignAccess().getAlternatives()); }
		(rule__Sign__Alternatives)
		{ after(grammarAccess.getSignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getConstantpartAssignment_0_0()); }
		(rule__Block__ConstantpartAssignment_0_0)
		{ after(grammarAccess.getBlockAccess().getConstantpartAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getType_partAssignment_0_1()); }
		(rule__Block__Type_partAssignment_0_1)
		{ after(grammarAccess.getBlockAccess().getType_partAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getVariablepartAssignment_0_2()); }
		(rule__Block__VariablepartAssignment_0_2)
		{ after(grammarAccess.getBlockAccess().getVariablepartAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getProcedure_function_partAssignment_0_3()); }
		(rule__Block__Procedure_function_partAssignment_0_3)
		{ after(grammarAccess.getBlockAccess().getProcedure_function_partAssignment_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getUns_numberAssignment_0()); }
		(rule__Constant__Uns_numberAssignment_0)
		{ after(grammarAccess.getConstantAccess().getUns_numberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getGroup_1()); }
		(rule__Constant__Group_1__0)
		{ after(grammarAccess.getConstantAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getName_idAssignment_2()); }
		(rule__Constant__Name_idAssignment_2)
		{ after(grammarAccess.getConstantAccess().getName_idAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getGroup_3()); }
		(rule__Constant__Group_3__0)
		{ after(grammarAccess.getConstantAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getStringAssignment_4()); }
		(rule__Constant__StringAssignment_4)
		{ after(grammarAccess.getConstantAccess().getStringAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getBooltypeAssignment_5()); }
		(rule__Constant__BooltypeAssignment_5)
		{ after(grammarAccess.getConstantAccess().getBooltypeAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unlabelled_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getSimpleAssignment_0()); }
		(rule__Unlabelled_statement__SimpleAssignment_0)
		{ after(grammarAccess.getUnlabelled_statementAccess().getSimpleAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getStructuredAssignment_1()); }
		(rule__Unlabelled_statement__StructuredAssignment_1)
		{ after(grammarAccess.getUnlabelled_statementAccess().getStructuredAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); }
		(rule__Simple_statement__AssignmentAssignment_0)
		{ after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_statementAccess().getProcedureAssignment_1()); }
		(rule__Simple_statement__ProcedureAssignment_1)
		{ after(grammarAccess.getSimple_statementAccess().getProcedureAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getGroup_0_0()); }
		(rule__Variable__Group_0_0__0)
		{ after(grammarAccess.getVariableAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getVariable_idAssignment_0_1()); }
		(rule__Variable__Variable_idAssignment_0_1)
		{ after(grammarAccess.getVariableAccess().getVariable_idAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_0()); }
		(rule__Variable__Group_1_0__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_1()); }
		(rule__Variable__Group_1_1__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_2()); }
		(rule__Variable__Group_1_2__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getCircumflexAccentKeyword_1_3()); }
		CircumflexAccent
		{ after(grammarAccess.getVariableAccess().getCircumflexAccentKeyword_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getSignalAssignment_0_0()); }
		(rule__Signed_factor__SignalAssignment_0_0)
		{ after(grammarAccess.getSigned_factorAccess().getSignalAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSigned_factorAccess().getSignalAssignment_0_1()); }
		(rule__Signed_factor__SignalAssignment_0_1)
		{ after(grammarAccess.getSigned_factorAccess().getSignalAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableAssignment_0()); }
		(rule__Factor__VariableAssignment_0)
		{ after(grammarAccess.getFactorAccess().getVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1()); }
		(rule__Factor__Group_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getFunctionAssignment_2()); }
		(rule__Factor__FunctionAssignment_2)
		{ after(grammarAccess.getFactorAccess().getFunctionAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getConstantAssignment_3()); }
		(rule__Factor__ConstantAssignment_3)
		{ after(grammarAccess.getFactorAccess().getConstantAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_4()); }
		(rule__Factor__Group_4__0)
		{ after(grammarAccess.getFactorAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getBool_factorAssignment_5()); }
		(rule__Factor__Bool_factorAssignment_5)
		{ after(grammarAccess.getFactorAccess().getBool_factorAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSimpleAssignment_0()); }
		(rule__Type__SimpleAssignment_0)
		{ after(grammarAccess.getTypeAccess().getSimpleAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getStructuredAssignment_1()); }
		(rule__Type__StructuredAssignment_1)
		{ after(grammarAccess.getTypeAccess().getStructuredAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypeAssignment_0()); }
		(rule__Simple_type__TypeAssignment_0)
		{ after(grammarAccess.getSimple_typeAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_typeAccess().getSubrange_typeAssignment_1()); }
		(rule__Simple_type__Subrange_typeAssignment_1)
		{ after(grammarAccess.getSimple_typeAccess().getSubrange_typeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_structured_type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnpacked_structured_typeAccess().getStatic_arrayAssignment_0()); }
		(rule__Unpacked_structured_type__Static_arrayAssignment_0)
		{ after(grammarAccess.getUnpacked_structured_typeAccess().getStatic_arrayAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnpacked_structured_typeAccess().getDynamicAssignment_1()); }
		(rule__Unpacked_structured_type__DynamicAssignment_1)
		{ after(grammarAccess.getUnpacked_structured_typeAccess().getDynamicAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getIdAssignment_0()); }
		(rule__Type_identifier__IdAssignment_0)
		{ after(grammarAccess.getType_identifierAccess().getIdAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getAlternatives_1()); }
		(rule__Type_identifier__Alternatives_1)
		{ after(grammarAccess.getType_identifierAccess().getAlternatives_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getBooleanAssignment_1_0()); }
		(rule__Type_identifier__BooleanAssignment_1_0)
		{ after(grammarAccess.getType_identifierAccess().getBooleanAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getIntegerAssignment_1_1()); }
		(rule__Type_identifier__IntegerAssignment_1_1)
		{ after(grammarAccess.getType_identifierAccess().getIntegerAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getStringAssignment_1_2()); }
		(rule__Type_identifier__StringAssignment_1_2)
		{ after(grammarAccess.getType_identifierAccess().getStringAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNumberAssignment_0()); }
		(rule__Unsigned_constant__NumberAssignment_0)
		{ after(grammarAccess.getUnsigned_constantAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getStringAssignment_1()); }
		(rule__Unsigned_constant__StringAssignment_1)
		{ after(grammarAccess.getUnsigned_constantAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNilAssignment_2()); }
		(rule__Unsigned_constant__NilAssignment_2)
		{ after(grammarAccess.getUnsigned_constantAccess().getNilAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_statementAccess().getCompound_statAssignment_0()); }
		(rule__Structured_statement__Compound_statAssignment_0)
		{ after(grammarAccess.getStructured_statementAccess().getCompound_statAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructured_statementAccess().getConditional_statAssignment_1()); }
		(rule__Structured_statement__Conditional_statAssignment_1)
		{ after(grammarAccess.getStructured_statementAccess().getConditional_statAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getPLUSTerminalRuleCall_0()); }
		RULE_PLUS
		{ after(grammarAccess.getAdditive_operatorAccess().getPLUSTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getMINUSTerminalRuleCall_1()); }
		RULE_MINUS
		{ after(grammarAccess.getAdditive_operatorAccess().getMINUSTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getORTerminalRuleCall_2()); }
		RULE_OR
		{ after(grammarAccess.getAdditive_operatorAccess().getORTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getSTARTerminalRuleCall_0()); }
		RULE_STAR
		{ after(grammarAccess.getMultiplicative_operatorAccess().getSTARTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getSLASHTerminalRuleCall_1()); }
		RULE_SLASH
		{ after(grammarAccess.getMultiplicative_operatorAccess().getSLASHTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getDIVTerminalRuleCall_2()); }
		RULE_DIV
		{ after(grammarAccess.getMultiplicative_operatorAccess().getDIVTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getMODTerminalRuleCall_3()); }
		RULE_MOD
		{ after(grammarAccess.getMultiplicative_operatorAccess().getMODTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getANDTerminalRuleCall_4()); }
		RULE_AND
		{ after(grammarAccess.getMultiplicative_operatorAccess().getANDTerminalRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_or_function_declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getProcAssignment_0()); }
		(rule__Procedure_or_function_declaration__ProcAssignment_0)
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getProcAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getFuncAssignment_1()); }
		(rule__Procedure_or_function_declaration__FuncAssignment_1)
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getFuncAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_0()); }
		(rule__Formal_parameter_section__ParametersAssignment_0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getGroup_1()); }
		(rule__Formal_parameter_section__Group_1__0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getGroup_2()); }
		(rule__Formal_parameter_section__Group_2__0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getGroup_3()); }
		(rule__Formal_parameter_section__Group_3__0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAccess().getTrueKeyword_0()); }
		True
		{ after(grammarAccess.getBoolAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolAccess().getFalseKeyword_1()); }
		False
		{ after(grammarAccess.getBoolAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignAccess().getPLUSTerminalRuleCall_0()); }
		RULE_PLUS
		{ after(grammarAccess.getSignAccess().getPLUSTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignAccess().getMINUSTerminalRuleCall_1()); }
		RULE_MINUS
		{ after(grammarAccess.getSignAccess().getMINUSTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getHeadingAssignment_0()); }
	(rule__Program__HeadingAssignment_0)
	{ after(grammarAccess.getProgramAccess().getHeadingAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getBlockAssignment_1()); }
	(rule__Program__BlockAssignment_1)
	{ after(grammarAccess.getProgramAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
	FullStop
	{ after(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__0__Impl
	rule__Program_heading_block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }
	Program
	{ after(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__1__Impl
	rule__Program_heading_block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); }
	(rule__Program_heading_block__NameAssignment_1)
	{ after(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); }
	(rule__Identifier_list__NamesAssignment_0)
	{ after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
	(rule__Identifier_list__Group_1__0)*
	{ after(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__0__Impl
	rule__Identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); }
	(rule__Identifier_list__NamesAssignment_1_1)
	{ after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getAlternatives_0()); }
	(rule__Block__Alternatives_0)*
	{ after(grammarAccess.getBlockAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
	(rule__Block__StatementAssignment_1)
	{ after(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group__0__Impl
	rule__Constant_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }
	Const
	{ after(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
		(rule__Constant_definition_part__Group_1__0)
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
		(rule__Constant_definition_part__Group_1__0)*
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group_1__0__Impl
	rule__Constant_definition_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getConstantsAssignment_1_0()); }
	(rule__Constant_definition_part__ConstantsAssignment_1_0)
	{ after(grammarAccess.getConstant_definition_partAccess().getConstantsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }
	Semicolon
	{ after(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__0__Impl
	rule__Constant_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); }
	(rule__Constant_definition__NameAssignment_0)
	{ after(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__1__Impl
	rule__Constant_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getEQUALTerminalRuleCall_1()); }
	RULE_EQUAL
	{ after(grammarAccess.getConstant_definitionAccess().getEQUALTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
	ruleconstant
	{ after(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_1__0__Impl
	rule__Constant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getSignParserRuleCall_1_0()); }
	rulesign
	{ after(grammarAccess.getConstantAccess().getSignParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getSig_numberAssignment_1_1()); }
	(rule__Constant__Sig_numberAssignment_1_1)
	{ after(grammarAccess.getConstantAccess().getSig_numberAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__0__Impl
	rule__Constant__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getSignParserRuleCall_3_0()); }
	rulesign
	{ after(grammarAccess.getConstantAccess().getSignParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getSig_name_idAssignment_3_1()); }
	(rule__Constant__Sig_name_idAssignment_3_1)
	{ after(grammarAccess.getConstantAccess().getSig_name_idAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group__0__Impl
	rule__Type_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); }
	Type
	{ after(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getType_definition_partAccess().getGroup_1()); }
		(rule__Type_definition_part__Group_1__0)
		{ after(grammarAccess.getType_definition_partAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getType_definition_partAccess().getGroup_1()); }
		(rule__Type_definition_part__Group_1__0)*
		{ after(grammarAccess.getType_definition_partAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group_1__0__Impl
	rule__Type_definition_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0()); }
	(rule__Type_definition_part__TypesAssignment_1_0)
	{ after(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); }
	Semicolon
	{ after(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition__Group__0__Impl
	rule__Type_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definitionAccess().getNameAssignment_0()); }
	(rule__Type_definition__NameAssignment_0)
	{ after(grammarAccess.getType_definitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition__Group__1__Impl
	rule__Type_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definitionAccess().getEQUALTerminalRuleCall_1()); }
	RULE_EQUAL
	{ after(grammarAccess.getType_definitionAccess().getEQUALTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definitionAccess().getTypeAssignment_2()); }
	(rule__Type_definition__TypeAssignment_2)
	{ after(grammarAccess.getType_definitionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__0__Impl
	rule__Variable_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); }
	Var
	{ after(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__1__Impl
	rule__Variable_declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_1()); }
	(rule__Variable_declaration_part__VariableAssignment_1)
	{ after(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__2__Impl
	rule__Variable_declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getGroup_2()); }
	(rule__Variable_declaration_part__Group_2__0)*
	{ after(grammarAccess.getVariable_declaration_partAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group_2__0__Impl
	rule__Variable_declaration_part__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2_0()); }
	Semicolon
	{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_2_1()); }
	(rule__Variable_declaration_part__VariableAssignment_2_1)
	{ after(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration__Group__0__Impl
	rule__Variable_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declarationAccess().getList_namesAssignment_0()); }
	(rule__Variable_declaration__List_namesAssignment_0)
	{ after(grammarAccess.getVariable_declarationAccess().getList_namesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration__Group__1__Impl
	rule__Variable_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declarationAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getVariable_declarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declarationAccess().getType_variableAssignment_2()); }
	(rule__Variable_declaration__Type_variableAssignment_2)
	{ after(grammarAccess.getVariable_declarationAccess().getType_variableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__0__Impl
	rule__Compound_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); }
	Begin
	{ after(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__1__Impl
	rule__Compound_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); }
	(rule__Compound_statement__SequenceAssignment_1)
	{ after(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); }
	End
	{ after(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group__0__Impl
	rule__Statements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getStatementsAssignment_0()); }
	(rule__Statements__StatementsAssignment_0)
	{ after(grammarAccess.getStatementsAccess().getStatementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getGroup_1()); }
	(rule__Statements__Group_1__0)*
	{ after(grammarAccess.getStatementsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statements__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group_1__0__Impl
	rule__Statements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getSemicolonKeyword_1_0()); }
	Semicolon
	{ after(grammarAccess.getStatementsAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getStatementsAssignment_1_1()); }
	(rule__Statements__StatementsAssignment_1_1)
	{ after(grammarAccess.getStatementsAccess().getStatementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAssignment_1()); }
	(rule__Statement__StatementAssignment_1)?
	{ after(grammarAccess.getStatementAccess().getStatementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__0__Impl
	rule__Assignment_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getDeclared_variableAssignment_0()); }
	(rule__Assignment_statement__Declared_variableAssignment_0)
	{ after(grammarAccess.getAssignment_statementAccess().getDeclared_variableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__1__Impl
	rule__Assignment_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getASSIGNTerminalRuleCall_1()); }
	RULE_ASSIGN
	{ after(grammarAccess.getAssignment_statementAccess().getASSIGNTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); }
	(rule__Assignment_statement__ExpressionAssignment_2)
	{ after(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_0()); }
	(rule__Variable__Alternatives_0)
	{ after(grammarAccess.getVariableAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_1()); }
	(rule__Variable__Alternatives_1)*
	{ after(grammarAccess.getVariableAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_0_0__0__Impl
	rule__Variable__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommercialAtKeyword_0_0_0()); }
	CommercialAt
	{ after(grammarAccess.getVariableAccess().getCommercialAtKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariable_idAssignment_0_0_1()); }
	(rule__Variable__Variable_idAssignment_0_0_1)
	{ after(grammarAccess.getVariableAccess().getVariable_idAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__0__Impl
	rule__Variable__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_1_0_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__1__Impl
	rule__Variable__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getIndiceAssignment_1_0_1()); }
	(rule__Variable__IndiceAssignment_1_0_1)
	{ after(grammarAccess.getVariableAccess().getIndiceAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__2__Impl
	rule__Variable__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_1_0_2()); }
	(rule__Variable__Group_1_0_2__0)*
	{ after(grammarAccess.getVariableAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_1_0_3()); }
	RightSquareBracket
	{ after(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0_2__0__Impl
	rule__Variable__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommaKeyword_1_0_2_0()); }
	Comma
	{ after(grammarAccess.getVariableAccess().getCommaKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getIndiceAssignment_1_0_2_1()); }
	(rule__Variable__IndiceAssignment_1_0_2_1)
	{ after(grammarAccess.getVariableAccess().getIndiceAssignment_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__0__Impl
	rule__Variable__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getLeftParenthesisFullStopKeyword_1_1_0()); }
	LeftParenthesisFullStop
	{ after(grammarAccess.getVariableAccess().getLeftParenthesisFullStopKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__1__Impl
	rule__Variable__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_1()); }
	(rule__Variable__ExpressionAssignment_1_1_1)
	{ after(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__2__Impl
	rule__Variable__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_1_1_2()); }
	(rule__Variable__Group_1_1_2__0)*
	{ after(grammarAccess.getVariableAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getFullStopRightParenthesisKeyword_1_1_3()); }
	FullStopRightParenthesis
	{ after(grammarAccess.getVariableAccess().getFullStopRightParenthesisKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1_2__0__Impl
	rule__Variable__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommaKeyword_1_1_2_0()); }
	Comma
	{ after(grammarAccess.getVariableAccess().getCommaKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_2_1()); }
	(rule__Variable__ExpressionAssignment_1_1_2_1)
	{ after(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_2__0__Impl
	rule__Variable__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getFullStopKeyword_1_2_0()); }
	FullStop
	{ after(grammarAccess.getVariableAccess().getFullStopKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNames_expAssignment_1_2_1()); }
	(rule__Variable__Names_expAssignment_1_2_1)
	{ after(grammarAccess.getVariableAccess().getNames_expAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group__0__Impl
	rule__Simple_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getTerm_expAssignment_0()); }
	(rule__Simple_expression__Term_expAssignment_0)
	{ after(grammarAccess.getSimple_expressionAccess().getTerm_expAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
	(rule__Simple_expression__Group_1__0)?
	{ after(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group_1__0__Impl
	rule__Simple_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getOperatorAssignment_1_0()); }
	(rule__Simple_expression__OperatorAssignment_1_0)
	{ after(grammarAccess.getSimple_expressionAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getExpressionAssignment_1_1()); }
	(rule__Simple_expression__ExpressionAssignment_1_1)
	{ after(grammarAccess.getSimple_expressionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorAssignment_0()); }
	(rule__Term__FactorAssignment_0)
	{ after(grammarAccess.getTermAccess().getFactorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)?
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getOperatorAssignment_1_0()); }
	(rule__Term__OperatorAssignment_1_0)
	{ after(grammarAccess.getTermAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getTerm2Assignment_1_1()); }
	(rule__Term__Term2Assignment_1_1)
	{ after(grammarAccess.getTermAccess().getTerm2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signed_factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signed_factor__Group__0__Impl
	rule__Signed_factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSigned_factorAccess().getAlternatives_0()); }
	(rule__Signed_factor__Alternatives_0)?
	{ after(grammarAccess.getSigned_factorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signed_factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSigned_factorAccess().getFactorAssignment_1()); }
	(rule__Signed_factor__FactorAssignment_1)
	{ after(grammarAccess.getSigned_factorAccess().getFactorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_1_0()); }
	LeftParenthesis
	{ after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
	rule__Factor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getExpressionAssignment_1_1()); }
	(rule__Factor__ExpressionAssignment_1_1)
	{ after(grammarAccess.getFactorAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_1_2()); }
	RightParenthesis
	{ after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__0__Impl
	rule__Factor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getNOTTerminalRuleCall_4_0()); }
	RULE_NOT
	{ after(grammarAccess.getFactorAccess().getNOTTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getNot_factorAssignment_4_1()); }
	(rule__Factor__Not_factorAssignment_4_1)
	{ after(grammarAccess.getFactorAccess().getNot_factorAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subrange_type__Group__0__Impl
	rule__Subrange_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubrange_typeAccess().getConstantInitAssignment_0()); }
	(rule__Subrange_type__ConstantInitAssignment_0)
	{ after(grammarAccess.getSubrange_typeAccess().getConstantInitAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subrange_type__Group__1__Impl
	rule__Subrange_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubrange_typeAccess().getDOTDOTTerminalRuleCall_1()); }
	RULE_DOTDOT
	{ after(grammarAccess.getSubrange_typeAccess().getDOTDOTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subrange_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubrange_typeAccess().getConstantFinalAssignment_2()); }
	(rule__Subrange_type__ConstantFinalAssignment_2)
	{ after(grammarAccess.getSubrange_typeAccess().getConstantFinalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamic_array_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamic_array_type__Group__0__Impl
	rule__Dynamic_array_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamic_array_typeAccess().getArrayKeyword_0()); }
	Array
	{ after(grammarAccess.getDynamic_array_typeAccess().getArrayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamic_array_type__Group__1__Impl
	rule__Dynamic_array_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamic_array_typeAccess().getOfKeyword_1()); }
	Of
	{ after(grammarAccess.getDynamic_array_typeAccess().getOfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dynamic_array_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDynamic_array_typeAccess().getTypeAssignment_2()); }
	(rule__Dynamic_array_type__TypeAssignment_2)
	{ after(grammarAccess.getDynamic_array_typeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__0__Impl
	rule__Array_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getArrayKeyword_0()); }
	Array
	{ after(grammarAccess.getArray_typeAccess().getArrayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__1__Impl
	rule__Array_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__2__Impl
	rule__Array_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getType_lAssignment_2()); }
	(rule__Array_type__Type_lAssignment_2)
	{ after(grammarAccess.getArray_typeAccess().getType_lAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__3__Impl
	rule__Array_type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__4__Impl
	rule__Array_type__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getOfKeyword_4()); }
	Of
	{ after(grammarAccess.getArray_typeAccess().getOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getTypeAssignment_5()); }
	(rule__Array_type__TypeAssignment_5)
	{ after(grammarAccess.getArray_typeAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_list__Group__0__Impl
	rule__Type_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_listAccess().getIndexesAssignment_0()); }
	(rule__Type_list__IndexesAssignment_0)
	{ after(grammarAccess.getType_listAccess().getIndexesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_listAccess().getGroup_1()); }
	(rule__Type_list__Group_1__0)*
	{ after(grammarAccess.getType_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_list__Group_1__0__Impl
	rule__Type_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_listAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getType_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_listAccess().getIndexesAssignment_1_1()); }
	(rule__Type_list__IndexesAssignment_1_1)
	{ after(grammarAccess.getType_listAccess().getIndexesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group__0__Impl
	rule__Procedure_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getName_idAssignment_0()); }
	(rule__Procedure_statement__Name_idAssignment_0)
	{ after(grammarAccess.getProcedure_statementAccess().getName_idAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getGroup_1()); }
	(rule__Procedure_statement__Group_1__0)?
	{ after(grammarAccess.getProcedure_statementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group_1__0__Impl
	rule__Procedure_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getLeftParenthesisKeyword_1_0()); }
	LeftParenthesis
	{ after(grammarAccess.getProcedure_statementAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group_1__1__Impl
	rule__Procedure_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getParametersAssignment_1_1()); }
	(rule__Procedure_statement__ParametersAssignment_1_1)
	{ after(grammarAccess.getProcedure_statementAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getRightParenthesisKeyword_1_2()); }
	RightParenthesis
	{ after(grammarAccess.getProcedure_statementAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParametersAssignment_0()); }
	(rule__Parameter_list__ParametersAssignment_0)
	{ after(grammarAccess.getParameter_listAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getGroup_1()); }
	(rule__Parameter_list__Group_1__0)*
	{ after(grammarAccess.getParameter_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__0__Impl
	rule__Parameter_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1()); }
	(rule__Parameter_list__ParametersAssignment_1_1)
	{ after(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__0__Impl
	rule__Case_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getCaseKeyword_0()); }
	Case
	{ after(grammarAccess.getCase_statementAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__1__Impl
	rule__Case_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getExpAssignment_1()); }
	(rule__Case_statement__ExpAssignment_1)
	{ after(grammarAccess.getCase_statementAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__2__Impl
	rule__Case_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getOfKeyword_2()); }
	Of
	{ after(grammarAccess.getCase_statementAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__3__Impl
	rule__Case_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getCase_listAssignment_3()); }
	(rule__Case_statement__Case_listAssignment_3)
	{ after(grammarAccess.getCase_statementAccess().getCase_listAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__4__Impl
	rule__Case_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getGroup_4()); }
	(rule__Case_statement__Group_4__0)*
	{ after(grammarAccess.getCase_statementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__5__Impl
	rule__Case_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getSemicolonKeyword_5()); }
	(Semicolon)?
	{ after(grammarAccess.getCase_statementAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__6__Impl
	rule__Case_statement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getGroup_6()); }
	(rule__Case_statement__Group_6__0)?
	{ after(grammarAccess.getCase_statementAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getEndKeyword_7()); }
	End
	{ after(grammarAccess.getCase_statementAccess().getEndKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group_4__0__Impl
	rule__Case_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getSemicolonKeyword_4_0()); }
	Semicolon
	{ after(grammarAccess.getCase_statementAccess().getSemicolonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getCase_listAssignment_4_1()); }
	(rule__Case_statement__Case_listAssignment_4_1)
	{ after(grammarAccess.getCase_statementAccess().getCase_listAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group_6__0__Impl
	rule__Case_statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getElseKeyword_6_0()); }
	Else
	{ after(grammarAccess.getCase_statementAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_statement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_statementAccess().getCase_statementsAssignment_6_1()); }
	(rule__Case_statement__Case_statementsAssignment_6_1)
	{ after(grammarAccess.getCase_statementAccess().getCase_statementsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case_list_element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_list_element__Group__0__Impl
	rule__Case_list_element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_list_element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_list_elementAccess().getConstsAssignment_0()); }
	(rule__Case_list_element__ConstsAssignment_0)
	{ after(grammarAccess.getCase_list_elementAccess().getConstsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_list_element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_list_element__Group__1__Impl
	rule__Case_list_element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_list_element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_list_elementAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getCase_list_elementAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_list_element__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_list_element__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_list_element__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_list_elementAccess().getCase_statementAssignment_2()); }
	(rule__Case_list_element__Case_statementAssignment_2)
	{ after(grammarAccess.getCase_list_elementAccess().getCase_statementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Const_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const_list__Group__0__Impl
	rule__Const_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConst_listAccess().getConstantsAssignment_0()); }
	(rule__Const_list__ConstantsAssignment_0)
	{ after(grammarAccess.getConst_listAccess().getConstantsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConst_listAccess().getGroup_1()); }
	(rule__Const_list__Group_1__0)*
	{ after(grammarAccess.getConst_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Const_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const_list__Group_1__0__Impl
	rule__Const_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConst_listAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getConst_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConst_listAccess().getConstantsAssignment_1_1()); }
	(rule__Const_list__ConstantsAssignment_1_1)
	{ after(grammarAccess.getConst_listAccess().getConstantsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_and_function_declaration_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_and_function_declaration_part__Group__0__Impl
	rule__Procedure_and_function_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getSubroutineAssignment_0()); }
	(rule__Procedure_and_function_declaration_part__SubroutineAssignment_0)
	{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getSubroutineAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_and_function_declaration_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }
	Semicolon
	{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__0__Impl
	rule__Procedure_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getProcedureParserRuleCall_0()); }
	ruleprocedure
	{ after(grammarAccess.getProcedure_declarationAccess().getProcedureParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__1__Impl
	rule__Procedure_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getNamesAssignment_1()); }
	(rule__Procedure_declaration__NamesAssignment_1)
	{ after(grammarAccess.getProcedure_declarationAccess().getNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__2__Impl
	rule__Procedure_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getParametersAssignment_2()); }
	(rule__Procedure_declaration__ParametersAssignment_2)?
	{ after(grammarAccess.getProcedure_declarationAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__3__Impl
	rule__Procedure_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_4()); }
	(rule__Procedure_declaration__BlockAssignment_4)
	{ after(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__0__Impl
	rule__Function_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getFunctionParserRuleCall_0()); }
	rulefunction
	{ after(grammarAccess.getFunction_declarationAccess().getFunctionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__1__Impl
	rule__Function_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getNamesAssignment_1()); }
	(rule__Function_declaration__NamesAssignment_1)
	{ after(grammarAccess.getFunction_declarationAccess().getNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__2__Impl
	rule__Function_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getParametersAssignment_2()); }
	(rule__Function_declaration__ParametersAssignment_2)?
	{ after(grammarAccess.getFunction_declarationAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__3__Impl
	rule__Function_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getFunction_declarationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__4__Impl
	rule__Function_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getTypesAssignment_4()); }
	(rule__Function_declaration__TypesAssignment_4)
	{ after(grammarAccess.getFunction_declarationAccess().getTypesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__5__Impl
	rule__Function_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_5()); }
	Semicolon
	{ after(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getBlockAssignment_6()); }
	(rule__Function_declaration__BlockAssignment_6)
	{ after(grammarAccess.getFunction_declarationAccess().getBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_designator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__0__Impl
	rule__Function_designator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getName_functionAssignment_0()); }
	(rule__Function_designator__Name_functionAssignment_0)
	{ after(grammarAccess.getFunction_designatorAccess().getName_functionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__1__Impl
	rule__Function_designator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__2__Impl
	rule__Function_designator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getParametersAssignment_2()); }
	(rule__Function_designator__ParametersAssignment_2)
	{ after(grammarAccess.getFunction_designatorAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__0__Impl
	rule__Formal_parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__1__Impl
	rule__Formal_parameter_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1()); }
	(rule__Formal_parameter_list__ParametersAssignment_1)
	{ after(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__2__Impl
	rule__Formal_parameter_list__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
	(rule__Formal_parameter_list__Group_2__0)*
	{ after(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group_2__0__Impl
	rule__Formal_parameter_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }
	Semicolon
	{ after(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1()); }
	(rule__Formal_parameter_list__ParametersAssignment_2_1)
	{ after(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_section__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_1__0__Impl
	rule__Formal_parameter_section__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getVarKeyword_1_0()); }
	Var
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getVarKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_1_1()); }
	(rule__Formal_parameter_section__ParametersAssignment_1_1)
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_section__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_2__0__Impl
	rule__Formal_parameter_section__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getFunctionParserRuleCall_2_0()); }
	rulefunction
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getFunctionParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_2_1()); }
	(rule__Formal_parameter_section__ParametersAssignment_2_1)
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_section__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_3__0__Impl
	rule__Formal_parameter_section__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getProcedureParserRuleCall_3_0()); }
	ruleprocedure
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getProcedureParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_3_1()); }
	(rule__Formal_parameter_section__ParametersAssignment_3_1)
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_group__Group__0__Impl
	rule__Parameter_group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_groupAccess().getNamesAssignment_0()); }
	(rule__Parameter_group__NamesAssignment_0)
	{ after(grammarAccess.getParameter_groupAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_group__Group__1__Impl
	rule__Parameter_group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_groupAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getParameter_groupAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_group__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_groupAccess().getTypesAssignment_2()); }
	(rule__Parameter_group__TypesAssignment_2)
	{ after(grammarAccess.getParameter_groupAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pascal__ProgramAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
		ruleprogram
		{ after(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__HeadingAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); }
		ruleprogram_heading_block
		{ after(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleblock
		{ after(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getNamesIdentifierParserRuleCall_0_0()); }
		ruleidentifier
		{ after(grammarAccess.getIdentifier_listAccess().getNamesIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__NamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getNamesIdentifierParserRuleCall_1_1_0()); }
		ruleidentifier
		{ after(grammarAccess.getIdentifier_listAccess().getNamesIdentifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getIdIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifierAccess().getIdIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ConstantpartAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getConstantpartConstant_definition_partParserRuleCall_0_0_0()); }
		ruleconstant_definition_part
		{ after(grammarAccess.getBlockAccess().getConstantpartConstant_definition_partParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Type_partAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getType_partType_definition_partParserRuleCall_0_1_0()); }
		ruletype_definition_part
		{ after(grammarAccess.getBlockAccess().getType_partType_definition_partParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__VariablepartAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getVariablepartVariable_declaration_partParserRuleCall_0_2_0()); }
		rulevariable_declaration_part
		{ after(grammarAccess.getBlockAccess().getVariablepartVariable_declaration_partParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Procedure_function_partAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getProcedure_function_partProcedure_and_function_declaration_partParserRuleCall_0_3_0()); }
		ruleprocedure_and_function_declaration_part
		{ after(grammarAccess.getBlockAccess().getProcedure_function_partProcedure_and_function_declaration_partParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementCompound_statementParserRuleCall_1_0()); }
		rulecompound_statement
		{ after(grammarAccess.getBlockAccess().getStatementCompound_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__ConstantsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getConstantsConstant_definitionParserRuleCall_1_0_0()); }
		ruleconstant_definition
		{ after(grammarAccess.getConstant_definition_partAccess().getConstantsConstant_definitionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Uns_numberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getUns_numberUnsigned_numberParserRuleCall_0_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getConstantAccess().getUns_numberUnsigned_numberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Sig_numberAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getSig_numberUnsigned_numberParserRuleCall_1_1_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getConstantAccess().getSig_numberUnsigned_numberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Name_idAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getName_idIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantAccess().getName_idIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Sig_name_idAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getSig_name_idIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantAccess().getSig_name_idIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__StringAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__BooltypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getBooltypeBoolParserRuleCall_5_0()); }
		rulebool
		{ after(grammarAccess.getConstantAccess().getBooltypeBoolParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__TypesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_definition_partAccess().getTypesType_definitionParserRuleCall_1_0_0()); }
		ruletype_definition
		{ after(grammarAccess.getType_definition_partAccess().getTypesType_definitionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getType_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_definitionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getType_definitionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_1_0()); }
		rulevariable_declaration
		{ after(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__VariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_2_1_0()); }
		rulevariable_declaration
		{ after(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__List_namesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declarationAccess().getList_namesIdentifier_listParserRuleCall_0_0()); }
		ruleidentifier_list
		{ after(grammarAccess.getVariable_declarationAccess().getList_namesIdentifier_listParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Type_variableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declarationAccess().getType_variableTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getVariable_declarationAccess().getType_variableTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__SequenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompound_statementAccess().getSequenceStatementsParserRuleCall_1_0()); }
		rulestatements
		{ after(grammarAccess.getCompound_statementAccess().getSequenceStatementsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__StatementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0_0()); }
		rulestatement
		{ after(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__StatementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_1_1_0()); }
		rulestatement
		{ after(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementUnlabelled_statementParserRuleCall_1_0()); }
		ruleunlabelled_statement
		{ after(grammarAccess.getStatementAccess().getStatementUnlabelled_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unlabelled_statement__SimpleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getSimpleSimple_statementParserRuleCall_0_0()); }
		rulesimple_statement
		{ after(grammarAccess.getUnlabelled_statementAccess().getSimpleSimple_statementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unlabelled_statement__StructuredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getStructuredStructured_statementParserRuleCall_1_0()); }
		rulestructured_statement
		{ after(grammarAccess.getUnlabelled_statementAccess().getStructuredStructured_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__AssignmentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); }
		ruleassignment_statement
		{ after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__ProcedureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getProcedureProcedure_statementParserRuleCall_1_0()); }
		ruleprocedure_statement
		{ after(grammarAccess.getSimple_statementAccess().getProcedureProcedure_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Declared_variableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getDeclared_variableVariableParserRuleCall_0_0()); }
		rulevariable
		{ after(grammarAccess.getAssignment_statementAccess().getDeclared_variableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Variable_idAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariable_idIDTerminalRuleCall_0_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getVariable_idIDTerminalRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Variable_idAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariable_idIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getVariable_idIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IndiceAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getIndiceExpressionParserRuleCall_1_0_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getIndiceExpressionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IndiceAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getIndiceExpressionParserRuleCall_1_0_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getIndiceExpressionParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ExpressionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ExpressionAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Names_expAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNames_expIDTerminalRuleCall_1_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNames_expIDTerminalRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SimpleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSimpleSimple_expressionParserRuleCall_0()); }
		rulesimple_expression
		{ after(grammarAccess.getExpressionAccess().getSimpleSimple_expressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Term_expAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getTerm_expTermParserRuleCall_0_0()); }
		ruleterm
		{ after(grammarAccess.getSimple_expressionAccess().getTerm_expTermParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getOperatorAdditive_operatorParserRuleCall_1_0_0()); }
		ruleadditive_operator
		{ after(grammarAccess.getSimple_expressionAccess().getOperatorAdditive_operatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getExpressionSimple_expressionParserRuleCall_1_1_0()); }
		rulesimple_expression
		{ after(grammarAccess.getSimple_expressionAccess().getExpressionSimple_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getFactorSigned_factorParserRuleCall_0_0()); }
		rulesigned_factor
		{ after(grammarAccess.getTermAccess().getFactorSigned_factorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getOperatorMultiplicative_operatorParserRuleCall_1_0_0()); }
		rulemultiplicative_operator
		{ after(grammarAccess.getTermAccess().getOperatorMultiplicative_operatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Term2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTerm2TermParserRuleCall_1_1_0()); }
		ruleterm
		{ after(grammarAccess.getTermAccess().getTerm2TermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__SignalAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getSignalPLUSTerminalRuleCall_0_0_0()); }
		RULE_PLUS
		{ after(grammarAccess.getSigned_factorAccess().getSignalPLUSTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__SignalAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getSignalMINUSTerminalRuleCall_0_1_0()); }
		RULE_MINUS
		{ after(grammarAccess.getSigned_factorAccess().getSignalMINUSTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__FactorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getFactorFactorParserRuleCall_1_0()); }
		rulefactor
		{ after(grammarAccess.getSigned_factorAccess().getFactorFactorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); }
		rulevariable
		{ after(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__FunctionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getFunctionFunction_designatorParserRuleCall_2_0()); }
		rulefunction_designator
		{ after(grammarAccess.getFactorAccess().getFunctionFunction_designatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ConstantAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getConstantUnsigned_constantParserRuleCall_3_0()); }
		ruleunsigned_constant
		{ after(grammarAccess.getFactorAccess().getConstantUnsigned_constantParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Not_factorAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getNot_factorFactorParserRuleCall_4_1_0()); }
		rulefactor
		{ after(grammarAccess.getFactorAccess().getNot_factorFactorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Bool_factorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getBool_factorBoolParserRuleCall_5_0()); }
		rulebool
		{ after(grammarAccess.getFactorAccess().getBool_factorBoolParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SimpleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSimpleSimple_typeParserRuleCall_0_0()); }
		rulesimple_type
		{ after(grammarAccess.getTypeAccess().getSimpleSimple_typeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__StructuredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStructuredStructured_typeParserRuleCall_1_0()); }
		rulestructured_type
		{ after(grammarAccess.getTypeAccess().getStructuredStructured_typeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypeType_identifierParserRuleCall_0_0()); }
		ruletype_identifier
		{ after(grammarAccess.getSimple_typeAccess().getTypeType_identifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__Subrange_typeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getSubrange_typeSubrange_typeParserRuleCall_1_0()); }
		rulesubrange_type
		{ after(grammarAccess.getSimple_typeAccess().getSubrange_typeSubrange_typeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__ConstantInitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubrange_typeAccess().getConstantInitConstantParserRuleCall_0_0()); }
		ruleconstant
		{ after(grammarAccess.getSubrange_typeAccess().getConstantInitConstantParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__ConstantFinalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubrange_typeAccess().getConstantFinalConstantParserRuleCall_2_0()); }
		ruleconstant
		{ after(grammarAccess.getSubrange_typeAccess().getConstantFinalConstantParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_type__UnpackedAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_typeAccess().getUnpackedUnpacked_structured_typeParserRuleCall_0()); }
		ruleunpacked_structured_type
		{ after(grammarAccess.getStructured_typeAccess().getUnpackedUnpacked_structured_typeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_structured_type__Static_arrayAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnpacked_structured_typeAccess().getStatic_arrayArray_typeParserRuleCall_0_0()); }
		rulearray_type
		{ after(grammarAccess.getUnpacked_structured_typeAccess().getStatic_arrayArray_typeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_structured_type__DynamicAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnpacked_structured_typeAccess().getDynamicDynamic_array_typeParserRuleCall_1_0()); }
		ruledynamic_array_type
		{ after(grammarAccess.getUnpacked_structured_typeAccess().getDynamicDynamic_array_typeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamic_array_typeAccess().getTypeType_identifierParserRuleCall_2_0()); }
		ruletype_identifier
		{ after(grammarAccess.getDynamic_array_typeAccess().getTypeType_identifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Type_lAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArray_typeAccess().getType_lType_listParserRuleCall_2_0()); }
		ruletype_list
		{ after(grammarAccess.getArray_typeAccess().getType_lType_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArray_typeAccess().getTypeType_identifierParserRuleCall_5_0()); }
		ruletype_identifier
		{ after(grammarAccess.getArray_typeAccess().getTypeType_identifierParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__IndexesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_listAccess().getIndexesIndex_typeParserRuleCall_0_0()); }
		ruleindex_type
		{ after(grammarAccess.getType_listAccess().getIndexesIndex_typeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_list__IndexesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_listAccess().getIndexesIndex_typeParserRuleCall_1_1_0()); }
		ruleindex_type
		{ after(grammarAccess.getType_listAccess().getIndexesIndex_typeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index_type__ContentAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndex_typeAccess().getContentSimple_typeParserRuleCall_0()); }
		rulesimple_type
		{ after(grammarAccess.getIndex_typeAccess().getContentSimple_typeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getType_identifierAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__BooleanAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getBooleanBooleanKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getBooleanBooleanKeyword_1_0_0()); }
			Boolean
			{ after(grammarAccess.getType_identifierAccess().getBooleanBooleanKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getBooleanBooleanKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__IntegerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getIntegerIntegerKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getIntegerIntegerKeyword_1_1_0()); }
			Integer
			{ after(grammarAccess.getType_identifierAccess().getIntegerIntegerKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getIntegerIntegerKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__StringAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getStringStringKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getStringStringKeyword_1_2_0()); }
			String
			{ after(grammarAccess.getType_identifierAccess().getStringStringKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getStringStringKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNumberUnsigned_numberParserRuleCall_0_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getUnsigned_constantAccess().getNumberUnsigned_numberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getUnsigned_constantAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__NilAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNilNILTerminalRuleCall_2_0()); }
		RULE_NIL
		{ after(grammarAccess.getUnsigned_constantAccess().getNilNILTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__NumbersAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getNumbersUnsigned_integerParserRuleCall_0()); }
		ruleunsigned_integer
		{ after(grammarAccess.getUnsigned_numberAccess().getNumbersUnsigned_integerParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Name_idAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_statementAccess().getName_idIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getProcedure_statementAccess().getName_idIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_statementAccess().getParametersParameter_listParserRuleCall_1_1_0()); }
		ruleparameter_list
		{ after(grammarAccess.getProcedure_statementAccess().getParametersParameter_listParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_listAccess().getParametersActual_parameterParserRuleCall_0_0()); }
		ruleactual_parameter
		{ after(grammarAccess.getParameter_listAccess().getParametersActual_parameterParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_listAccess().getParametersActual_parameterParserRuleCall_1_1_0()); }
		ruleactual_parameter
		{ after(grammarAccess.getParameter_listAccess().getParametersActual_parameterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actual_parameter__ContentAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActual_parameterAccess().getContentExpressionParserRuleCall_0()); }
		ruleexpression
		{ after(grammarAccess.getActual_parameterAccess().getContentExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_statement__Compound_statAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_statementAccess().getCompound_statCompound_statementParserRuleCall_0_0()); }
		rulecompound_statement
		{ after(grammarAccess.getStructured_statementAccess().getCompound_statCompound_statementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_statement__Conditional_statAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_statementAccess().getConditional_statConditional_statementParserRuleCall_1_0()); }
		ruleconditional_statement
		{ after(grammarAccess.getStructured_statementAccess().getConditional_statConditional_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_statement__Cond_statementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_statementAccess().getCond_statementsCase_statementParserRuleCall_0()); }
		rulecase_statement
		{ after(grammarAccess.getConditional_statementAccess().getCond_statementsCase_statementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_statementAccess().getExpExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getCase_statementAccess().getExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Case_listAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_statementAccess().getCase_listCase_list_elementParserRuleCall_3_0()); }
		rulecase_list_element
		{ after(grammarAccess.getCase_statementAccess().getCase_listCase_list_elementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Case_listAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_statementAccess().getCase_listCase_list_elementParserRuleCall_4_1_0()); }
		rulecase_list_element
		{ after(grammarAccess.getCase_statementAccess().getCase_listCase_list_elementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Case_statementsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_statementAccess().getCase_statementsStatementsParserRuleCall_6_1_0()); }
		rulestatements
		{ after(grammarAccess.getCase_statementAccess().getCase_statementsStatementsParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_list_element__ConstsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_list_elementAccess().getConstsConst_listParserRuleCall_0_0()); }
		ruleconst_list
		{ after(grammarAccess.getCase_list_elementAccess().getConstsConst_listParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_list_element__Case_statementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_list_elementAccess().getCase_statementStatementParserRuleCall_2_0()); }
		rulestatement
		{ after(grammarAccess.getCase_list_elementAccess().getCase_statementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__ConstantsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConst_listAccess().getConstantsConstantParserRuleCall_0_0()); }
		ruleconstant
		{ after(grammarAccess.getConst_listAccess().getConstantsConstantParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const_list__ConstantsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConst_listAccess().getConstantsConstantParserRuleCall_1_1_0()); }
		ruleconstant
		{ after(grammarAccess.getConst_listAccess().getConstantsConstantParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__SubroutineAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getSubroutineProcedure_or_function_declarationParserRuleCall_0_0()); }
		ruleprocedure_or_function_declaration
		{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getSubroutineProcedure_or_function_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_or_function_declaration__ProcAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getProcProcedure_declarationParserRuleCall_0_0()); }
		ruleprocedure_declaration
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getProcProcedure_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_or_function_declaration__FuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getFuncFunction_declarationParserRuleCall_1_0()); }
		rulefunction_declaration
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getFuncFunction_declarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcedure_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getProcedure_declarationAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__BlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_4_0()); }
		ruleblock
		{ after(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunction_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getFunction_declarationAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__TypesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getTypesResult_typeParserRuleCall_4_0()); }
		ruleresult_type
		{ after(grammarAccess.getFunction_declarationAccess().getTypesResult_typeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__BlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_6_0()); }
		ruleblock
		{ after(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Name_functionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getName_functionIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunction_designatorAccess().getName_functionIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getParametersParameter_listParserRuleCall_2_0()); }
		ruleparameter_list
		{ after(grammarAccess.getFunction_designatorAccess().getParametersParameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__ParametersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_1_0()); }
		ruleformal_parameter_section
		{ after(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__ParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_2_1_0()); }
		ruleformal_parameter_section
		{ after(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_0_0()); }
		ruleparameter_group
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_1_1_0()); }
		ruleparameter_group
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__ParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_2_1_0()); }
		ruleparameter_group
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__ParametersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_3_1_0()); }
		ruleparameter_group
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getParametersParameter_groupParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_groupAccess().getNamesIdentifier_listParserRuleCall_0_0()); }
		ruleidentifier_list
		{ after(grammarAccess.getParameter_groupAccess().getNamesIdentifier_listParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_groupAccess().getTypesType_identifierParserRuleCall_2_0()); }
		ruletype_identifier
		{ after(grammarAccess.getParameter_groupAccess().getTypesType_identifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

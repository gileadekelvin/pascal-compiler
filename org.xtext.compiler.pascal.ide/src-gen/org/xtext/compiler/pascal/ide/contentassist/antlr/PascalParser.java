/*
 * generated by Xtext 2.15.0
 */
package org.xtext.compiler.pascal.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.compiler.pascal.ide.contentassist.antlr.internal.InternalPascalParser;
import org.xtext.compiler.pascal.services.PascalGrammarAccess;

public class PascalParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(PascalGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, PascalGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getBlockAccess().getAlternatives_0(), "rule__Block__Alternatives_0");
			builder.put(grammarAccess.getConstantAccess().getAlternatives(), "rule__Constant__Alternatives");
			builder.put(grammarAccess.getUnlabelled_statementAccess().getAlternatives(), "rule__Unlabelled_statement__Alternatives");
			builder.put(grammarAccess.getSimple_statementAccess().getAlternatives(), "rule__Simple_statement__Alternatives");
			builder.put(grammarAccess.getVariableAccess().getAlternatives_0(), "rule__Variable__Alternatives_0");
			builder.put(grammarAccess.getVariableAccess().getAlternatives_1(), "rule__Variable__Alternatives_1");
			builder.put(grammarAccess.getSigned_factorAccess().getAlternatives_0(), "rule__Signed_factor__Alternatives_0");
			builder.put(grammarAccess.getFactorAccess().getAlternatives(), "rule__Factor__Alternatives");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getSimple_typeAccess().getAlternatives(), "rule__Simple_type__Alternatives");
			builder.put(grammarAccess.getUnpacked_structured_typeAccess().getAlternatives(), "rule__Unpacked_structured_type__Alternatives");
			builder.put(grammarAccess.getType_identifierAccess().getAlternatives(), "rule__Type_identifier__Alternatives");
			builder.put(grammarAccess.getType_identifierAccess().getAlternatives_1(), "rule__Type_identifier__Alternatives_1");
			builder.put(grammarAccess.getUnsigned_constantAccess().getAlternatives(), "rule__Unsigned_constant__Alternatives");
			builder.put(grammarAccess.getStructured_statementAccess().getAlternatives(), "rule__Structured_statement__Alternatives");
			builder.put(grammarAccess.getAdditive_operatorAccess().getAlternatives(), "rule__Additive_operator__Alternatives");
			builder.put(grammarAccess.getMultiplicative_operatorAccess().getAlternatives(), "rule__Multiplicative_operator__Alternatives");
			builder.put(grammarAccess.getProcedure_or_function_declarationAccess().getAlternatives(), "rule__Procedure_or_function_declaration__Alternatives");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives(), "rule__Formal_parameter_section__Alternatives");
			builder.put(grammarAccess.getBoolAccess().getAlternatives(), "rule__Bool__Alternatives");
			builder.put(grammarAccess.getSignAccess().getAlternatives(), "rule__Sign__Alternatives");
			builder.put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
			builder.put(grammarAccess.getProgram_heading_blockAccess().getGroup(), "rule__Program_heading_block__Group__0");
			builder.put(grammarAccess.getIdentifier_listAccess().getGroup(), "rule__Identifier_list__Group__0");
			builder.put(grammarAccess.getIdentifier_listAccess().getGroup_1(), "rule__Identifier_list__Group_1__0");
			builder.put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
			builder.put(grammarAccess.getConstant_definition_partAccess().getGroup(), "rule__Constant_definition_part__Group__0");
			builder.put(grammarAccess.getConstant_definition_partAccess().getGroup_1(), "rule__Constant_definition_part__Group_1__0");
			builder.put(grammarAccess.getConstant_definitionAccess().getGroup(), "rule__Constant_definition__Group__0");
			builder.put(grammarAccess.getConstantAccess().getGroup_1(), "rule__Constant__Group_1__0");
			builder.put(grammarAccess.getConstantAccess().getGroup_3(), "rule__Constant__Group_3__0");
			builder.put(grammarAccess.getType_definition_partAccess().getGroup(), "rule__Type_definition_part__Group__0");
			builder.put(grammarAccess.getType_definition_partAccess().getGroup_1(), "rule__Type_definition_part__Group_1__0");
			builder.put(grammarAccess.getType_definitionAccess().getGroup(), "rule__Type_definition__Group__0");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getGroup(), "rule__Variable_declaration_part__Group__0");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getGroup_2(), "rule__Variable_declaration_part__Group_2__0");
			builder.put(grammarAccess.getVariable_declarationAccess().getGroup(), "rule__Variable_declaration__Group__0");
			builder.put(grammarAccess.getCompound_statementAccess().getGroup(), "rule__Compound_statement__Group__0");
			builder.put(grammarAccess.getStatementsAccess().getGroup(), "rule__Statements__Group__0");
			builder.put(grammarAccess.getStatementsAccess().getGroup_1(), "rule__Statements__Group_1__0");
			builder.put(grammarAccess.getStatementAccess().getGroup(), "rule__Statement__Group__0");
			builder.put(grammarAccess.getAssignment_statementAccess().getGroup(), "rule__Assignment_statement__Group__0");
			builder.put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_0_0(), "rule__Variable__Group_0_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_0(), "rule__Variable__Group_1_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_0_2(), "rule__Variable__Group_1_0_2__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1(), "rule__Variable__Group_1_1__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1_2(), "rule__Variable__Group_1_1_2__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_2(), "rule__Variable__Group_1_2__0");
			builder.put(grammarAccess.getSimple_expressionAccess().getGroup(), "rule__Simple_expression__Group__0");
			builder.put(grammarAccess.getSimple_expressionAccess().getGroup_1(), "rule__Simple_expression__Group_1__0");
			builder.put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
			builder.put(grammarAccess.getSigned_factorAccess().getGroup(), "rule__Signed_factor__Group__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_1(), "rule__Factor__Group_1__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_4(), "rule__Factor__Group_4__0");
			builder.put(grammarAccess.getSubrange_typeAccess().getGroup(), "rule__Subrange_type__Group__0");
			builder.put(grammarAccess.getDynamic_array_typeAccess().getGroup(), "rule__Dynamic_array_type__Group__0");
			builder.put(grammarAccess.getArray_typeAccess().getGroup(), "rule__Array_type__Group__0");
			builder.put(grammarAccess.getType_listAccess().getGroup(), "rule__Type_list__Group__0");
			builder.put(grammarAccess.getType_listAccess().getGroup_1(), "rule__Type_list__Group_1__0");
			builder.put(grammarAccess.getProcedure_statementAccess().getGroup(), "rule__Procedure_statement__Group__0");
			builder.put(grammarAccess.getProcedure_statementAccess().getGroup_1(), "rule__Procedure_statement__Group_1__0");
			builder.put(grammarAccess.getParameter_listAccess().getGroup(), "rule__Parameter_list__Group__0");
			builder.put(grammarAccess.getParameter_listAccess().getGroup_1(), "rule__Parameter_list__Group_1__0");
			builder.put(grammarAccess.getCase_statementAccess().getGroup(), "rule__Case_statement__Group__0");
			builder.put(grammarAccess.getCase_statementAccess().getGroup_4(), "rule__Case_statement__Group_4__0");
			builder.put(grammarAccess.getCase_statementAccess().getGroup_6(), "rule__Case_statement__Group_6__0");
			builder.put(grammarAccess.getCase_list_elementAccess().getGroup(), "rule__Case_list_element__Group__0");
			builder.put(grammarAccess.getConst_listAccess().getGroup(), "rule__Const_list__Group__0");
			builder.put(grammarAccess.getConst_listAccess().getGroup_1(), "rule__Const_list__Group_1__0");
			builder.put(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup(), "rule__Procedure_and_function_declaration_part__Group__0");
			builder.put(grammarAccess.getProcedure_declarationAccess().getGroup(), "rule__Procedure_declaration__Group__0");
			builder.put(grammarAccess.getProcedure_typeAccess().getGroup(), "rule__Procedure_type__Group__0");
			builder.put(grammarAccess.getFunction_declarationAccess().getGroup(), "rule__Function_declaration__Group__0");
			builder.put(grammarAccess.getFunction_typeAccess().getGroup(), "rule__Function_type__Group__0");
			builder.put(grammarAccess.getFunction_designatorAccess().getGroup(), "rule__Function_designator__Group__0");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getGroup(), "rule__Formal_parameter_list__Group__0");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getGroup_2(), "rule__Formal_parameter_list__Group_2__0");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getGroup_1(), "rule__Formal_parameter_section__Group_1__0");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getGroup_2(), "rule__Formal_parameter_section__Group_2__0");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getGroup_3(), "rule__Formal_parameter_section__Group_3__0");
			builder.put(grammarAccess.getParameter_groupAccess().getGroup(), "rule__Parameter_group__Group__0");
			builder.put(grammarAccess.getPascalAccess().getProgramAssignment(), "rule__Pascal__ProgramAssignment");
			builder.put(grammarAccess.getProgramAccess().getHeadingAssignment_0(), "rule__Program__HeadingAssignment_0");
			builder.put(grammarAccess.getProgramAccess().getBlockAssignment_1(), "rule__Program__BlockAssignment_1");
			builder.put(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1(), "rule__Program_heading_block__NameAssignment_1");
			builder.put(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0(), "rule__Identifier_list__NamesAssignment_0");
			builder.put(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1(), "rule__Identifier_list__NamesAssignment_1_1");
			builder.put(grammarAccess.getIdentifierAccess().getIdAssignment(), "rule__Identifier__IdAssignment");
			builder.put(grammarAccess.getBlockAccess().getConstantpartAssignment_0_0(), "rule__Block__ConstantpartAssignment_0_0");
			builder.put(grammarAccess.getBlockAccess().getType_partAssignment_0_1(), "rule__Block__Type_partAssignment_0_1");
			builder.put(grammarAccess.getBlockAccess().getVariablepartAssignment_0_2(), "rule__Block__VariablepartAssignment_0_2");
			builder.put(grammarAccess.getBlockAccess().getProcedure_function_partAssignment_0_3(), "rule__Block__Procedure_function_partAssignment_0_3");
			builder.put(grammarAccess.getBlockAccess().getStatementAssignment_1(), "rule__Block__StatementAssignment_1");
			builder.put(grammarAccess.getConstant_definition_partAccess().getConstantsAssignment_1_0(), "rule__Constant_definition_part__ConstantsAssignment_1_0");
			builder.put(grammarAccess.getConstant_definitionAccess().getNameAssignment_0(), "rule__Constant_definition__NameAssignment_0");
			builder.put(grammarAccess.getConstantAccess().getUns_numberAssignment_0(), "rule__Constant__Uns_numberAssignment_0");
			builder.put(grammarAccess.getConstantAccess().getSig_numberAssignment_1_1(), "rule__Constant__Sig_numberAssignment_1_1");
			builder.put(grammarAccess.getConstantAccess().getName_idAssignment_2(), "rule__Constant__Name_idAssignment_2");
			builder.put(grammarAccess.getConstantAccess().getSig_name_idAssignment_3_1(), "rule__Constant__Sig_name_idAssignment_3_1");
			builder.put(grammarAccess.getConstantAccess().getStringAssignment_4(), "rule__Constant__StringAssignment_4");
			builder.put(grammarAccess.getConstantAccess().getBooltypeAssignment_5(), "rule__Constant__BooltypeAssignment_5");
			builder.put(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0(), "rule__Type_definition_part__TypesAssignment_1_0");
			builder.put(grammarAccess.getType_definitionAccess().getNameAssignment_0(), "rule__Type_definition__NameAssignment_0");
			builder.put(grammarAccess.getType_definitionAccess().getTypeAssignment_2(), "rule__Type_definition__TypeAssignment_2");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_1(), "rule__Variable_declaration_part__VariableAssignment_1");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_2_1(), "rule__Variable_declaration_part__VariableAssignment_2_1");
			builder.put(grammarAccess.getVariable_declarationAccess().getList_namesAssignment_0(), "rule__Variable_declaration__List_namesAssignment_0");
			builder.put(grammarAccess.getVariable_declarationAccess().getType_variableAssignment_2(), "rule__Variable_declaration__Type_variableAssignment_2");
			builder.put(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1(), "rule__Compound_statement__SequenceAssignment_1");
			builder.put(grammarAccess.getStatementsAccess().getStatementsAssignment_0(), "rule__Statements__StatementsAssignment_0");
			builder.put(grammarAccess.getStatementsAccess().getStatementsAssignment_1_1(), "rule__Statements__StatementsAssignment_1_1");
			builder.put(grammarAccess.getStatementAccess().getStatementAssignment_1(), "rule__Statement__StatementAssignment_1");
			builder.put(grammarAccess.getUnlabelled_statementAccess().getSimpleAssignment_0(), "rule__Unlabelled_statement__SimpleAssignment_0");
			builder.put(grammarAccess.getUnlabelled_statementAccess().getStructuredAssignment_1(), "rule__Unlabelled_statement__StructuredAssignment_1");
			builder.put(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0(), "rule__Simple_statement__AssignmentAssignment_0");
			builder.put(grammarAccess.getSimple_statementAccess().getProcedureAssignment_1(), "rule__Simple_statement__ProcedureAssignment_1");
			builder.put(grammarAccess.getAssignment_statementAccess().getDeclared_variableAssignment_0(), "rule__Assignment_statement__Declared_variableAssignment_0");
			builder.put(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2(), "rule__Assignment_statement__ExpressionAssignment_2");
			builder.put(grammarAccess.getVariableAccess().getVariable_idAssignment_0_0_1(), "rule__Variable__Variable_idAssignment_0_0_1");
			builder.put(grammarAccess.getVariableAccess().getVariable_idAssignment_0_1(), "rule__Variable__Variable_idAssignment_0_1");
			builder.put(grammarAccess.getVariableAccess().getIndiceAssignment_1_0_1(), "rule__Variable__IndiceAssignment_1_0_1");
			builder.put(grammarAccess.getVariableAccess().getIndiceAssignment_1_0_2_1(), "rule__Variable__IndiceAssignment_1_0_2_1");
			builder.put(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_1(), "rule__Variable__ExpressionAssignment_1_1_1");
			builder.put(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_2_1(), "rule__Variable__ExpressionAssignment_1_1_2_1");
			builder.put(grammarAccess.getVariableAccess().getNames_expAssignment_1_2_1(), "rule__Variable__Names_expAssignment_1_2_1");
			builder.put(grammarAccess.getExpressionAccess().getSimpleAssignment(), "rule__Expression__SimpleAssignment");
			builder.put(grammarAccess.getSimple_expressionAccess().getTerm_expAssignment_0(), "rule__Simple_expression__Term_expAssignment_0");
			builder.put(grammarAccess.getSimple_expressionAccess().getOperatorAssignment_1_0(), "rule__Simple_expression__OperatorAssignment_1_0");
			builder.put(grammarAccess.getSimple_expressionAccess().getExpressionAssignment_1_1(), "rule__Simple_expression__ExpressionAssignment_1_1");
			builder.put(grammarAccess.getTermAccess().getFactorAssignment_0(), "rule__Term__FactorAssignment_0");
			builder.put(grammarAccess.getTermAccess().getOperatorAssignment_1_0(), "rule__Term__OperatorAssignment_1_0");
			builder.put(grammarAccess.getTermAccess().getTerm2Assignment_1_1(), "rule__Term__Term2Assignment_1_1");
			builder.put(grammarAccess.getSigned_factorAccess().getSignalAssignment_0_0(), "rule__Signed_factor__SignalAssignment_0_0");
			builder.put(grammarAccess.getSigned_factorAccess().getSignalAssignment_0_1(), "rule__Signed_factor__SignalAssignment_0_1");
			builder.put(grammarAccess.getSigned_factorAccess().getFactorAssignment_1(), "rule__Signed_factor__FactorAssignment_1");
			builder.put(grammarAccess.getFactorAccess().getVariableAssignment_0(), "rule__Factor__VariableAssignment_0");
			builder.put(grammarAccess.getFactorAccess().getExpressionAssignment_1_1(), "rule__Factor__ExpressionAssignment_1_1");
			builder.put(grammarAccess.getFactorAccess().getFunctionAssignment_2(), "rule__Factor__FunctionAssignment_2");
			builder.put(grammarAccess.getFactorAccess().getConstantAssignment_3(), "rule__Factor__ConstantAssignment_3");
			builder.put(grammarAccess.getFactorAccess().getNot_factorAssignment_4_1(), "rule__Factor__Not_factorAssignment_4_1");
			builder.put(grammarAccess.getFactorAccess().getBool_factorAssignment_5(), "rule__Factor__Bool_factorAssignment_5");
			builder.put(grammarAccess.getTypeAccess().getSimpleAssignment_0(), "rule__Type__SimpleAssignment_0");
			builder.put(grammarAccess.getTypeAccess().getStructuredAssignment_1(), "rule__Type__StructuredAssignment_1");
			builder.put(grammarAccess.getSimple_typeAccess().getTypeAssignment_0(), "rule__Simple_type__TypeAssignment_0");
			builder.put(grammarAccess.getSimple_typeAccess().getSubrange_typeAssignment_1(), "rule__Simple_type__Subrange_typeAssignment_1");
			builder.put(grammarAccess.getSubrange_typeAccess().getConstantInitAssignment_0(), "rule__Subrange_type__ConstantInitAssignment_0");
			builder.put(grammarAccess.getSubrange_typeAccess().getConstantFinalAssignment_2(), "rule__Subrange_type__ConstantFinalAssignment_2");
			builder.put(grammarAccess.getStructured_typeAccess().getUnpackedAssignment(), "rule__Structured_type__UnpackedAssignment");
			builder.put(grammarAccess.getUnpacked_structured_typeAccess().getStatic_arrayAssignment_0(), "rule__Unpacked_structured_type__Static_arrayAssignment_0");
			builder.put(grammarAccess.getUnpacked_structured_typeAccess().getDynamicAssignment_1(), "rule__Unpacked_structured_type__DynamicAssignment_1");
			builder.put(grammarAccess.getDynamic_array_typeAccess().getTypeAssignment_2(), "rule__Dynamic_array_type__TypeAssignment_2");
			builder.put(grammarAccess.getArray_typeAccess().getType_lAssignment_2(), "rule__Array_type__Type_lAssignment_2");
			builder.put(grammarAccess.getArray_typeAccess().getTypeAssignment_5(), "rule__Array_type__TypeAssignment_5");
			builder.put(grammarAccess.getType_listAccess().getIndexesAssignment_0(), "rule__Type_list__IndexesAssignment_0");
			builder.put(grammarAccess.getType_listAccess().getIndexesAssignment_1_1(), "rule__Type_list__IndexesAssignment_1_1");
			builder.put(grammarAccess.getIndex_typeAccess().getContentAssignment(), "rule__Index_type__ContentAssignment");
			builder.put(grammarAccess.getType_identifierAccess().getIdAssignment_0(), "rule__Type_identifier__IdAssignment_0");
			builder.put(grammarAccess.getType_identifierAccess().getBooleanAssignment_1_0(), "rule__Type_identifier__BooleanAssignment_1_0");
			builder.put(grammarAccess.getType_identifierAccess().getIntegerAssignment_1_1(), "rule__Type_identifier__IntegerAssignment_1_1");
			builder.put(grammarAccess.getType_identifierAccess().getStringAssignment_1_2(), "rule__Type_identifier__StringAssignment_1_2");
			builder.put(grammarAccess.getUnsigned_constantAccess().getNumberAssignment_0(), "rule__Unsigned_constant__NumberAssignment_0");
			builder.put(grammarAccess.getUnsigned_constantAccess().getStringAssignment_1(), "rule__Unsigned_constant__StringAssignment_1");
			builder.put(grammarAccess.getUnsigned_constantAccess().getNilAssignment_2(), "rule__Unsigned_constant__NilAssignment_2");
			builder.put(grammarAccess.getUnsigned_numberAccess().getNumbersAssignment(), "rule__Unsigned_number__NumbersAssignment");
			builder.put(grammarAccess.getProcedure_statementAccess().getName_idAssignment_0(), "rule__Procedure_statement__Name_idAssignment_0");
			builder.put(grammarAccess.getProcedure_statementAccess().getParametersAssignment_1_1(), "rule__Procedure_statement__ParametersAssignment_1_1");
			builder.put(grammarAccess.getParameter_listAccess().getParametersAssignment_0(), "rule__Parameter_list__ParametersAssignment_0");
			builder.put(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1(), "rule__Parameter_list__ParametersAssignment_1_1");
			builder.put(grammarAccess.getActual_parameterAccess().getContentAssignment(), "rule__Actual_parameter__ContentAssignment");
			builder.put(grammarAccess.getStructured_statementAccess().getCompound_statAssignment_0(), "rule__Structured_statement__Compound_statAssignment_0");
			builder.put(grammarAccess.getStructured_statementAccess().getConditional_statAssignment_1(), "rule__Structured_statement__Conditional_statAssignment_1");
			builder.put(grammarAccess.getConditional_statementAccess().getCond_statementsAssignment(), "rule__Conditional_statement__Cond_statementsAssignment");
			builder.put(grammarAccess.getCase_statementAccess().getExpAssignment_1(), "rule__Case_statement__ExpAssignment_1");
			builder.put(grammarAccess.getCase_statementAccess().getCase_listAssignment_3(), "rule__Case_statement__Case_listAssignment_3");
			builder.put(grammarAccess.getCase_statementAccess().getCase_listAssignment_4_1(), "rule__Case_statement__Case_listAssignment_4_1");
			builder.put(grammarAccess.getCase_statementAccess().getCase_statementsAssignment_6_1(), "rule__Case_statement__Case_statementsAssignment_6_1");
			builder.put(grammarAccess.getCase_list_elementAccess().getConstsAssignment_0(), "rule__Case_list_element__ConstsAssignment_0");
			builder.put(grammarAccess.getCase_list_elementAccess().getCase_statementAssignment_2(), "rule__Case_list_element__Case_statementAssignment_2");
			builder.put(grammarAccess.getConst_listAccess().getConstantsAssignment_0(), "rule__Const_list__ConstantsAssignment_0");
			builder.put(grammarAccess.getConst_listAccess().getConstantsAssignment_1_1(), "rule__Const_list__ConstantsAssignment_1_1");
			builder.put(grammarAccess.getProcedure_and_function_declaration_partAccess().getSubroutineAssignment_0(), "rule__Procedure_and_function_declaration_part__SubroutineAssignment_0");
			builder.put(grammarAccess.getProcedure_or_function_declarationAccess().getProcAssignment_0(), "rule__Procedure_or_function_declaration__ProcAssignment_0");
			builder.put(grammarAccess.getProcedure_or_function_declarationAccess().getFuncAssignment_1(), "rule__Procedure_or_function_declaration__FuncAssignment_1");
			builder.put(grammarAccess.getProcedure_declarationAccess().getNamesAssignment_1(), "rule__Procedure_declaration__NamesAssignment_1");
			builder.put(grammarAccess.getProcedure_declarationAccess().getParametersAssignment_2(), "rule__Procedure_declaration__ParametersAssignment_2");
			builder.put(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_4(), "rule__Procedure_declaration__BlockAssignment_4");
			builder.put(grammarAccess.getProcedure_typeAccess().getTypesAssignment_2(), "rule__Procedure_type__TypesAssignment_2");
			builder.put(grammarAccess.getFunction_declarationAccess().getNamesAssignment_1(), "rule__Function_declaration__NamesAssignment_1");
			builder.put(grammarAccess.getFunction_declarationAccess().getParametersAssignment_2(), "rule__Function_declaration__ParametersAssignment_2");
			builder.put(grammarAccess.getFunction_declarationAccess().getTypesAssignment_4(), "rule__Function_declaration__TypesAssignment_4");
			builder.put(grammarAccess.getFunction_declarationAccess().getBlockAssignment_6(), "rule__Function_declaration__BlockAssignment_6");
			builder.put(grammarAccess.getFunction_typeAccess().getParametersAssignment_1(), "rule__Function_type__ParametersAssignment_1");
			builder.put(grammarAccess.getFunction_typeAccess().getTypesAssignment_3(), "rule__Function_type__TypesAssignment_3");
			builder.put(grammarAccess.getFunction_designatorAccess().getName_functionAssignment_0(), "rule__Function_designator__Name_functionAssignment_0");
			builder.put(grammarAccess.getFunction_designatorAccess().getParametersAssignment_2(), "rule__Function_designator__ParametersAssignment_2");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1(), "rule__Formal_parameter_list__ParametersAssignment_1");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1(), "rule__Formal_parameter_list__ParametersAssignment_2_1");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_0(), "rule__Formal_parameter_section__ParametersAssignment_0");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_1_1(), "rule__Formal_parameter_section__ParametersAssignment_1_1");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_2_1(), "rule__Formal_parameter_section__ParametersAssignment_2_1");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getParametersAssignment_3_1(), "rule__Formal_parameter_section__ParametersAssignment_3_1");
			builder.put(grammarAccess.getParameter_groupAccess().getNamesAssignment_0(), "rule__Parameter_group__NamesAssignment_0");
			builder.put(grammarAccess.getParameter_groupAccess().getTypesAssignment_2(), "rule__Parameter_group__TypesAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private PascalGrammarAccess grammarAccess;

	@Override
	protected InternalPascalParser createParser() {
		InternalPascalParser result = new InternalPascalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PascalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}

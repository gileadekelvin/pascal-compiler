/*
 * generated by Xtext 2.15.0
 */
grammar InternalPascal;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.compiler.pascal.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.compiler.pascal.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.compiler.pascal.services.PascalGrammarAccess;

}
@parser::members {
	private PascalGrammarAccess grammarAccess;

	public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulepascal
entryRulepascal
:
{ before(grammarAccess.getPascalRule()); }
	 rulepascal
{ after(grammarAccess.getPascalRule()); } 
	 EOF 
;

// Rule pascal
rulepascal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPascalAccess().getProgramAssignment()); }
		(rule__Pascal__ProgramAssignment)
		{ after(grammarAccess.getPascalAccess().getProgramAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprogram
entryRuleprogram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleprogram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule program
ruleprogram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprogram_heading_block
entryRuleprogram_heading_block
:
{ before(grammarAccess.getProgram_heading_blockRule()); }
	 ruleprogram_heading_block
{ after(grammarAccess.getProgram_heading_blockRule()); } 
	 EOF 
;

// Rule program_heading_block
ruleprogram_heading_block 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
		(rule__Program_heading_block__Group__0)
		{ after(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier_list
entryRuleidentifier_list
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleidentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule identifier_list
ruleidentifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
		(rule__Identifier_list__Group__0)
		{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock
entryRuleblock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_definition_part
entryRuleconstant_definition_part
:
{ before(grammarAccess.getConstant_definition_partRule()); }
	 ruleconstant_definition_part
{ after(grammarAccess.getConstant_definition_partRule()); } 
	 EOF 
;

// Rule constant_definition_part
ruleconstant_definition_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup()); }
		(rule__Constant_definition_part__Group__0)
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_definition
entryRuleconstant_definition
:
{ before(grammarAccess.getConstant_definitionRule()); }
	 ruleconstant_definition
{ after(grammarAccess.getConstant_definitionRule()); } 
	 EOF 
;

// Rule constant_definition
ruleconstant_definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_definitionAccess().getGroup()); }
		(rule__Constant_definition__Group__0)
		{ after(grammarAccess.getConstant_definitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant
entryRuleconstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleconstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule constant
ruleconstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_declaration_part
entryRulevariable_declaration_part
:
{ before(grammarAccess.getVariable_declaration_partRule()); }
	 rulevariable_declaration_part
{ after(grammarAccess.getVariable_declaration_partRule()); } 
	 EOF 
;

// Rule variable_declaration_part
rulevariable_declaration_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
		(rule__Variable_declaration_part__Group__0)
		{ after(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_declaration
entryRulevariable_declaration
:
{ before(grammarAccess.getVariable_declarationRule()); }
	 rulevariable_declaration
{ after(grammarAccess.getVariable_declarationRule()); } 
	 EOF 
;

// Rule variable_declaration
rulevariable_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_declarationAccess().getGroup()); }
		(rule__Variable_declaration__Group__0)
		{ after(grammarAccess.getVariable_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompound_statement
entryRulecompound_statement
:
{ before(grammarAccess.getCompound_statementRule()); }
	 rulecompound_statement
{ after(grammarAccess.getCompound_statementRule()); } 
	 EOF 
;

// Rule compound_statement
rulecompound_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup()); }
		(rule__Compound_statement__Group__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatements
entryRulestatements
:
{ before(grammarAccess.getStatementsRule()); }
	 rulestatements
{ after(grammarAccess.getStatementsRule()); } 
	 EOF 
;

// Rule statements
rulestatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementsAccess().getGroup()); }
		(rule__Statements__Group__0)
		{ after(grammarAccess.getStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunlabelled_statement
entryRuleunlabelled_statement
:
{ before(grammarAccess.getUnlabelled_statementRule()); }
	 ruleunlabelled_statement
{ after(grammarAccess.getUnlabelled_statementRule()); } 
	 EOF 
;

// Rule unlabelled_statement
ruleunlabelled_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getAlternatives()); }
		(rule__Unlabelled_statement__Alternatives)
		{ after(grammarAccess.getUnlabelled_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabel
entryRulelabel
:
{ before(grammarAccess.getLabelRule()); }
	 rulelabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule label
rulelabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getNumberAssignment()); }
		(rule__Label__NumberAssignment)
		{ after(grammarAccess.getLabelAccess().getNumberAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_statement
entryRulesimple_statement
:
{ before(grammarAccess.getSimple_statementRule()); }
	 rulesimple_statement
{ after(grammarAccess.getSimple_statementRule()); } 
	 EOF 
;

// Rule simple_statement
rulesimple_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAlternatives()); }
		(rule__Simple_statement__Alternatives)
		{ after(grammarAccess.getSimple_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment_statement
entryRuleassignment_statement
:
{ before(grammarAccess.getAssignment_statementRule()); }
	 ruleassignment_statement
{ after(grammarAccess.getAssignment_statementRule()); } 
	 EOF 
;

// Rule assignment_statement
ruleassignment_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getGroup()); }
		(rule__Assignment_statement__Group__0)
		{ after(grammarAccess.getAssignment_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable
entryRulevariable
:
{ before(grammarAccess.getVariableRule()); }
	 rulevariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule variable
rulevariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_expression
entryRulesimple_expression
:
{ before(grammarAccess.getSimple_expressionRule()); }
	 rulesimple_expression
{ after(grammarAccess.getSimple_expressionRule()); } 
	 EOF 
;

// Rule simple_expression
rulesimple_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getGroup()); }
		(rule__Simple_expression__Group__0)
		{ after(grammarAccess.getSimple_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleterm
entryRuleterm
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesigned_factor
entryRulesigned_factor
:
{ before(grammarAccess.getSigned_factorRule()); }
	 rulesigned_factor
{ after(grammarAccess.getSigned_factorRule()); } 
	 EOF 
;

// Rule signed_factor
rulesigned_factor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSigned_factorAccess().getGroup()); }
		(rule__Signed_factor__Group__0)
		{ after(grammarAccess.getSigned_factorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefactor
entryRulefactor
:
{ before(grammarAccess.getFactorRule()); }
	 rulefactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule factor
rulefactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAlternatives()); }
		(rule__Factor__Alternatives)
		{ after(grammarAccess.getFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleset
entryRuleset
:
{ before(grammarAccess.getSetRule()); }
	 ruleset
{ after(grammarAccess.getSetRule()); } 
	 EOF 
;

// Rule set
ruleset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetAccess().getAlternatives()); }
		(rule__Set__Alternatives)
		{ after(grammarAccess.getSetAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelementList
entryRuleelementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleelementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule elementList
ruleelementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelement
entryRuleelement
:
{ before(grammarAccess.getElementRule()); }
	 ruleelement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule element
ruleelement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype
entryRuletype
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getTypeAssignment()); }
		(rule__Type__TypeAssignment)
		{ after(grammarAccess.getTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_type
entryRulesimple_type
:
{ before(grammarAccess.getSimple_typeRule()); }
	 rulesimple_type
{ after(grammarAccess.getSimple_typeRule()); } 
	 EOF 
;

// Rule simple_type
rulesimple_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_typeAccess().getAlternatives()); }
		(rule__Simple_type__Alternatives)
		{ after(grammarAccess.getSimple_typeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulescalar_type
entryRulescalar_type
:
{ before(grammarAccess.getScalar_typeRule()); }
	 rulescalar_type
{ after(grammarAccess.getScalar_typeRule()); } 
	 EOF 
;

// Rule scalar_type
rulescalar_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalar_typeAccess().getGroup()); }
		(rule__Scalar_type__Group__0)
		{ after(grammarAccess.getScalar_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesubrange_type
entryRulesubrange_type
:
{ before(grammarAccess.getSubrange_typeRule()); }
	 rulesubrange_type
{ after(grammarAccess.getSubrange_typeRule()); } 
	 EOF 
;

// Rule subrange_type
rulesubrange_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubrange_typeAccess().getGroup()); }
		(rule__Subrange_type__Group__0)
		{ after(grammarAccess.getSubrange_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_identifier
entryRuletype_identifier
:
{ before(grammarAccess.getType_identifierRule()); }
	 ruletype_identifier
{ after(grammarAccess.getType_identifierRule()); } 
	 EOF 
;

// Rule type_identifier
ruletype_identifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_identifierAccess().getAlternatives()); }
		(rule__Type_identifier__Alternatives)
		{ after(grammarAccess.getType_identifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestring_type
entryRulestring_type
:
{ before(grammarAccess.getString_typeRule()); }
	 rulestring_type
{ after(grammarAccess.getString_typeRule()); } 
	 EOF 
;

// Rule string_type
rulestring_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString_typeAccess().getGroup()); }
		(rule__String_type__Group__0)
		{ after(grammarAccess.getString_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_constant
entryRuleunsigned_constant
:
{ before(grammarAccess.getUnsigned_constantRule()); }
	 ruleunsigned_constant
{ after(grammarAccess.getUnsigned_constantRule()); } 
	 EOF 
;

// Rule unsigned_constant
ruleunsigned_constant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getAlternatives()); }
		(rule__Unsigned_constant__Alternatives)
		{ after(grammarAccess.getUnsigned_constantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_number
entryRuleunsigned_number
:
{ before(grammarAccess.getUnsigned_numberRule()); }
	 ruleunsigned_number
{ after(grammarAccess.getUnsigned_numberRule()); } 
	 EOF 
;

// Rule unsigned_number
ruleunsigned_number 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getAlternatives()); }
		(rule__Unsigned_number__Alternatives)
		{ after(grammarAccess.getUnsigned_numberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_chr
entryRuleconstant_chr
:
{ before(grammarAccess.getConstant_chrRule()); }
	 ruleconstant_chr
{ after(grammarAccess.getConstant_chrRule()); } 
	 EOF 
;

// Rule constant_chr
ruleconstant_chr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_chrAccess().getGroup()); }
		(rule__Constant_chr__Group__0)
		{ after(grammarAccess.getConstant_chrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_statement
entryRuleprocedure_statement
:
{ before(grammarAccess.getProcedure_statementRule()); }
	 ruleprocedure_statement
{ after(grammarAccess.getProcedure_statementRule()); } 
	 EOF 
;

// Rule procedure_statement
ruleprocedure_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_statementAccess().getGroup()); }
		(rule__Procedure_statement__Group__0)
		{ after(grammarAccess.getProcedure_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_list
entryRuleparameter_list
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleparameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule parameter_list
ruleparameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_listAccess().getGroup()); }
		(rule__Parameter_list__Group__0)
		{ after(grammarAccess.getParameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleactual_parameter
entryRuleactual_parameter
:
{ before(grammarAccess.getActual_parameterRule()); }
	 ruleactual_parameter
{ after(grammarAccess.getActual_parameterRule()); } 
	 EOF 
;

// Rule actual_parameter
ruleactual_parameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActual_parameterAccess().getExpressionParserRuleCall()); }
		ruleexpression
		{ after(grammarAccess.getActual_parameterAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegoto_statement
entryRulegoto_statement
:
{ before(grammarAccess.getGoto_statementRule()); }
	 rulegoto_statement
{ after(grammarAccess.getGoto_statementRule()); } 
	 EOF 
;

// Rule goto_statement
rulegoto_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoto_statementAccess().getGotoKeyword()); }
		'goto'
		{ after(grammarAccess.getGoto_statementAccess().getGotoKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestructured_statement
entryRulestructured_statement
:
{ before(grammarAccess.getStructured_statementRule()); }
	 rulestructured_statement
{ after(grammarAccess.getStructured_statementRule()); } 
	 EOF 
;

// Rule structured_statement
rulestructured_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructured_statementAccess().getStructuredKeyword()); }
		'structured'
		{ after(grammarAccess.getStructured_statementAccess().getStructuredKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_integer
entryRuleunsigned_integer
:
{ before(grammarAccess.getUnsigned_integerRule()); }
	 ruleunsigned_integer
{ after(grammarAccess.getUnsigned_integerRule()); } 
	 EOF 
;

// Rule unsigned_integer
ruleunsigned_integer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_integerAccess().getNUM_INTTerminalRuleCall()); }
		RULE_NUM_INT
		{ after(grammarAccess.getUnsigned_integerAccess().getNUM_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_real
entryRuleunsigned_real
:
{ before(grammarAccess.getUnsigned_realRule()); }
	 ruleunsigned_real
{ after(grammarAccess.getUnsigned_realRule()); } 
	 EOF 
;

// Rule unsigned_real
ruleunsigned_real 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_realAccess().getNUM_REALTerminalRuleCall()); }
		RULE_NUM_REAL
		{ after(grammarAccess.getUnsigned_realAccess().getNUM_REALTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadditive_operator
entryRuleadditive_operator
:
{ before(grammarAccess.getAdditive_operatorRule()); }
	 ruleadditive_operator
{ after(grammarAccess.getAdditive_operatorRule()); } 
	 EOF 
;

// Rule additive_operator
ruleadditive_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getAlternatives()); }
		(rule__Additive_operator__Alternatives)
		{ after(grammarAccess.getAdditive_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemultiplicative_operator
entryRulemultiplicative_operator
:
{ before(grammarAccess.getMultiplicative_operatorRule()); }
	 rulemultiplicative_operator
{ after(grammarAccess.getMultiplicative_operatorRule()); } 
	 EOF 
;

// Rule multiplicative_operator
rulemultiplicative_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getAlternatives()); }
		(rule__Multiplicative_operator__Alternatives)
		{ after(grammarAccess.getMultiplicative_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerelational_operator
entryRulerelational_operator
:
{ before(grammarAccess.getRelational_operatorRule()); }
	 rulerelational_operator
{ after(grammarAccess.getRelational_operatorRule()); } 
	 EOF 
;

// Rule relational_operator
rulerelational_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelational_operatorAccess().getAlternatives()); }
		(rule__Relational_operator__Alternatives)
		{ after(grammarAccess.getRelational_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_and_function_declaration_part
entryRuleprocedure_and_function_declaration_part
:
{ before(grammarAccess.getProcedure_and_function_declaration_partRule()); }
	 ruleprocedure_and_function_declaration_part
{ after(grammarAccess.getProcedure_and_function_declaration_partRule()); } 
	 EOF 
;

// Rule procedure_and_function_declaration_part
ruleprocedure_and_function_declaration_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
		(rule__Procedure_and_function_declaration_part__Group__0)
		{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_or_function_declaration
entryRuleprocedure_or_function_declaration
:
{ before(grammarAccess.getProcedure_or_function_declarationRule()); }
	 ruleprocedure_or_function_declaration
{ after(grammarAccess.getProcedure_or_function_declarationRule()); } 
	 EOF 
;

// Rule procedure_or_function_declaration
ruleprocedure_or_function_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getAlternatives()); }
		(rule__Procedure_or_function_declaration__Alternatives)
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_declaration
entryRuleprocedure_declaration
:
{ before(grammarAccess.getProcedure_declarationRule()); }
	 ruleprocedure_declaration
{ after(grammarAccess.getProcedure_declarationRule()); } 
	 EOF 
;

// Rule procedure_declaration
ruleprocedure_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getGroup()); }
		(rule__Procedure_declaration__Group__0)
		{ after(grammarAccess.getProcedure_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_type
entryRuleprocedure_type
:
{ before(grammarAccess.getProcedure_typeRule()); }
	 ruleprocedure_type
{ after(grammarAccess.getProcedure_typeRule()); } 
	 EOF 
;

// Rule procedure_type
ruleprocedure_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_typeAccess().getGroup()); }
		(rule__Procedure_type__Group__0)
		{ after(grammarAccess.getProcedure_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_declaration
entryRulefunction_declaration
:
{ before(grammarAccess.getFunction_declarationRule()); }
	 rulefunction_declaration
{ after(grammarAccess.getFunction_declarationRule()); } 
	 EOF 
;

// Rule function_declaration
rulefunction_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getGroup()); }
		(rule__Function_declaration__Group__0)
		{ after(grammarAccess.getFunction_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_type
entryRulefunction_type
:
{ before(grammarAccess.getFunction_typeRule()); }
	 rulefunction_type
{ after(grammarAccess.getFunction_typeRule()); } 
	 EOF 
;

// Rule function_type
rulefunction_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_typeAccess().getGroup()); }
		(rule__Function_type__Group__0)
		{ after(grammarAccess.getFunction_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_designator
entryRulefunction_designator
:
{ before(grammarAccess.getFunction_designatorRule()); }
	 rulefunction_designator
{ after(grammarAccess.getFunction_designatorRule()); } 
	 EOF 
;

// Rule function_designator
rulefunction_designator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getGroup()); }
		(rule__Function_designator__Group__0)
		{ after(grammarAccess.getFunction_designatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleformal_parameter_list
entryRuleformal_parameter_list
:
{ before(grammarAccess.getFormal_parameter_listRule()); }
	 ruleformal_parameter_list
{ after(grammarAccess.getFormal_parameter_listRule()); } 
	 EOF 
;

// Rule formal_parameter_list
ruleformal_parameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
		(rule__Formal_parameter_list__Group__0)
		{ after(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleformal_parameter_section
entryRuleformal_parameter_section
:
{ before(grammarAccess.getFormal_parameter_sectionRule()); }
	 ruleformal_parameter_section
{ after(grammarAccess.getFormal_parameter_sectionRule()); } 
	 EOF 
;

// Rule formal_parameter_section
ruleformal_parameter_section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
		(rule__Formal_parameter_section__Alternatives)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_group
entryRuleparameter_group
:
{ before(grammarAccess.getParameter_groupRule()); }
	 ruleparameter_group
{ after(grammarAccess.getParameter_groupRule()); } 
	 EOF 
;

// Rule parameter_group
ruleparameter_group 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_groupAccess().getGroup()); }
		(rule__Parameter_group__Group__0)
		{ after(grammarAccess.getParameter_groupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleresult_type
entryRuleresult_type
:
{ before(grammarAccess.getResult_typeRule()); }
	 ruleresult_type
{ after(grammarAccess.getResult_typeRule()); } 
	 EOF 
;

// Rule result_type
ruleresult_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResult_typeAccess().getType_identifierParserRuleCall()); }
		ruletype_identifier
		{ after(grammarAccess.getResult_typeAccess().getType_identifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebool
entryRulebool
:
{ before(grammarAccess.getBoolRule()); }
	 rulebool
{ after(grammarAccess.getBoolRule()); } 
	 EOF 
;

// Rule bool
rulebool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolAccess().getAlternatives()); }
		(rule__Bool__Alternatives)
		{ after(grammarAccess.getBoolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesign
entryRulesign
:
{ before(grammarAccess.getSignRule()); }
	 rulesign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule sign
rulesign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignAccess().getAlternatives()); }
		(rule__Sign__Alternatives)
		{ after(grammarAccess.getSignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getConstantpartAssignment_0_0()); }
		(rule__Block__ConstantpartAssignment_0_0)
		{ after(grammarAccess.getBlockAccess().getConstantpartAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getVariablepartAssignment_0_1()); }
		(rule__Block__VariablepartAssignment_0_1)
		{ after(grammarAccess.getBlockAccess().getVariablepartAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getProcedure_function_partAssignment_0_2()); }
		(rule__Block__Procedure_function_partAssignment_0_2)
		{ after(grammarAccess.getBlockAccess().getProcedure_function_partAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getUnsigned_numberParserRuleCall_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getConstantAccess().getUnsigned_numberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getGroup_1()); }
		(rule__Constant__Group_1__0)
		{ after(grammarAccess.getConstantAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getNamesAssignment_2()); }
		(rule__Constant__NamesAssignment_2)
		{ after(grammarAccess.getConstantAccess().getNamesAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getGroup_3()); }
		(rule__Constant__Group_3__0)
		{ after(grammarAccess.getConstantAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getStringAssignment_4()); }
		(rule__Constant__StringAssignment_4)
		{ after(grammarAccess.getConstantAccess().getStringAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getConstant_chrParserRuleCall_5()); }
		ruleconstant_chr
		{ after(grammarAccess.getConstantAccess().getConstant_chrParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1()); }
		(rule__Statement__Group_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unlabelled_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getSimpleAssignment_0()); }
		(rule__Unlabelled_statement__SimpleAssignment_0)
		{ after(grammarAccess.getUnlabelled_statementAccess().getSimpleAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getStructuredAssignment_1()); }
		(rule__Unlabelled_statement__StructuredAssignment_1)
		{ after(grammarAccess.getUnlabelled_statementAccess().getStructuredAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); }
		(rule__Simple_statement__AssignmentAssignment_0)
		{ after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_statementAccess().getProcedureAssignment_1()); }
		(rule__Simple_statement__ProcedureAssignment_1)
		{ after(grammarAccess.getSimple_statementAccess().getProcedureAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_statementAccess().getGotoAssignment_2()); }
		(rule__Simple_statement__GotoAssignment_2)
		{ after(grammarAccess.getSimple_statementAccess().getGotoAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getGroup_0_0()); }
		(rule__Variable__Group_0_0__0)
		{ after(grammarAccess.getVariableAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getNamesAssignment_0_1()); }
		(rule__Variable__NamesAssignment_0_1)
		{ after(grammarAccess.getVariableAccess().getNamesAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_0()); }
		(rule__Variable__Group_1_0__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_1()); }
		(rule__Variable__Group_1_1__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_2()); }
		(rule__Variable__Group_1_2__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getCircumflexAccentKeyword_1_3()); }
		'^'
		{ after(grammarAccess.getVariableAccess().getCircumflexAccentKeyword_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getOperatorsAssignment_0_0()); }
		(rule__Signed_factor__OperatorsAssignment_0_0)
		{ after(grammarAccess.getSigned_factorAccess().getOperatorsAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSigned_factorAccess().getOperatorsAssignment_0_1()); }
		(rule__Signed_factor__OperatorsAssignment_0_1)
		{ after(grammarAccess.getSigned_factorAccess().getOperatorsAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableAssignment_0()); }
		(rule__Factor__VariableAssignment_0)
		{ after(grammarAccess.getFactorAccess().getVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1()); }
		(rule__Factor__Group_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getFunction_designatorParserRuleCall_2()); }
		rulefunction_designator
		{ after(grammarAccess.getFactorAccess().getFunction_designatorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getConstantAssignment_3()); }
		(rule__Factor__ConstantAssignment_3)
		{ after(grammarAccess.getFactorAccess().getConstantAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getSetAssignment_4()); }
		(rule__Factor__SetAssignment_4)
		{ after(grammarAccess.getFactorAccess().getSetAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_5()); }
		(rule__Factor__Group_5__0)
		{ after(grammarAccess.getFactorAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getBooleanAssignment_6()); }
		(rule__Factor__BooleanAssignment_6)
		{ after(grammarAccess.getFactorAccess().getBooleanAssignment_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getGroup_0()); }
		(rule__Set__Group_0__0)
		{ after(grammarAccess.getSetAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetAccess().getGroup_1()); }
		(rule__Set__Group_1__0)
		{ after(grammarAccess.getSetAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesAssignment_0()); }
		(rule__Simple_type__TypesAssignment_0)
		{ after(grammarAccess.getSimple_typeAccess().getTypesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesAssignment_1()); }
		(rule__Simple_type__TypesAssignment_1)
		{ after(grammarAccess.getSimple_typeAccess().getTypesAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesAssignment_2()); }
		(rule__Simple_type__TypesAssignment_2)
		{ after(grammarAccess.getSimple_typeAccess().getTypesAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesAssignment_3()); }
		(rule__Simple_type__TypesAssignment_3)
		{ after(grammarAccess.getSimple_typeAccess().getTypesAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getNamesAssignment_0()); }
		(rule__Type_identifier__NamesAssignment_0)
		{ after(grammarAccess.getType_identifierAccess().getNamesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getAlternatives_1()); }
		(rule__Type_identifier__Alternatives_1)
		{ after(grammarAccess.getType_identifierAccess().getAlternatives_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeAssignment_1_0()); }
		(rule__Type_identifier__TypeAssignment_1_0)
		{ after(grammarAccess.getType_identifierAccess().getTypeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeAssignment_1_1()); }
		(rule__Type_identifier__TypeAssignment_1_1)
		{ after(grammarAccess.getType_identifierAccess().getTypeAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeAssignment_1_2()); }
		(rule__Type_identifier__TypeAssignment_1_2)
		{ after(grammarAccess.getType_identifierAccess().getTypeAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeAssignment_1_3()); }
		(rule__Type_identifier__TypeAssignment_1_3)
		{ after(grammarAccess.getType_identifierAccess().getTypeAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeAssignment_1_4()); }
		(rule__Type_identifier__TypeAssignment_1_4)
		{ after(grammarAccess.getType_identifierAccess().getTypeAssignment_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_typeAccess().getNamesAssignment_2_0()); }
		(rule__String_type__NamesAssignment_2_0)
		{ after(grammarAccess.getString_typeAccess().getNamesAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getString_typeAccess().getNumberAssignment_2_1()); }
		(rule__String_type__NumberAssignment_2_1)
		{ after(grammarAccess.getString_typeAccess().getNumberAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNumberAssignment_0()); }
		(rule__Unsigned_constant__NumberAssignment_0)
		{ after(grammarAccess.getUnsigned_constantAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getCharAssignment_1()); }
		(rule__Unsigned_constant__CharAssignment_1)
		{ after(grammarAccess.getUnsigned_constantAccess().getCharAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getStringAssignment_2()); }
		(rule__Unsigned_constant__StringAssignment_2)
		{ after(grammarAccess.getUnsigned_constantAccess().getStringAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNilAssignment_3()); }
		(rule__Unsigned_constant__NilAssignment_3)
		{ after(grammarAccess.getUnsigned_constantAccess().getNilAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getNumbersAssignment_0()); }
		(rule__Unsigned_number__NumbersAssignment_0)
		{ after(grammarAccess.getUnsigned_numberAccess().getNumbersAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getNumbersAssignment_1()); }
		(rule__Unsigned_number__NumbersAssignment_1)
		{ after(grammarAccess.getUnsigned_numberAccess().getNumbersAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getPLUSTerminalRuleCall_0()); }
		RULE_PLUS
		{ after(grammarAccess.getAdditive_operatorAccess().getPLUSTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getMINUSTerminalRuleCall_1()); }
		RULE_MINUS
		{ after(grammarAccess.getAdditive_operatorAccess().getMINUSTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdditive_operatorAccess().getORTerminalRuleCall_2()); }
		RULE_OR
		{ after(grammarAccess.getAdditive_operatorAccess().getORTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getSTARTerminalRuleCall_0()); }
		RULE_STAR
		{ after(grammarAccess.getMultiplicative_operatorAccess().getSTARTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getSLASHTerminalRuleCall_1()); }
		RULE_SLASH
		{ after(grammarAccess.getMultiplicative_operatorAccess().getSLASHTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getDIVTerminalRuleCall_2()); }
		RULE_DIV
		{ after(grammarAccess.getMultiplicative_operatorAccess().getDIVTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getMODTerminalRuleCall_3()); }
		RULE_MOD
		{ after(grammarAccess.getMultiplicative_operatorAccess().getMODTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_operatorAccess().getANDTerminalRuleCall_4()); }
		RULE_AND
		{ after(grammarAccess.getMultiplicative_operatorAccess().getANDTerminalRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_operatorAccess().getEQUALTerminalRuleCall_0()); }
		RULE_EQUAL
		{ after(grammarAccess.getRelational_operatorAccess().getEQUALTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_operatorAccess().getNOT_EQUALTerminalRuleCall_1()); }
		RULE_NOT_EQUAL
		{ after(grammarAccess.getRelational_operatorAccess().getNOT_EQUALTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_operatorAccess().getLTTerminalRuleCall_2()); }
		RULE_LT
		{ after(grammarAccess.getRelational_operatorAccess().getLTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_operatorAccess().getLETerminalRuleCall_3()); }
		RULE_LE
		{ after(grammarAccess.getRelational_operatorAccess().getLETerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_operatorAccess().getGETerminalRuleCall_4()); }
		RULE_GE
		{ after(grammarAccess.getRelational_operatorAccess().getGETerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_operatorAccess().getGTTerminalRuleCall_5()); }
		RULE_GT
		{ after(grammarAccess.getRelational_operatorAccess().getGTTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_operatorAccess().getINTerminalRuleCall_6()); }
		RULE_IN
		{ after(grammarAccess.getRelational_operatorAccess().getINTerminalRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_or_function_declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getProcedure_declarationParserRuleCall_0()); }
		ruleprocedure_declaration
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getProcedure_declarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcedure_or_function_declarationAccess().getFunction_declarationParserRuleCall_1()); }
		rulefunction_declaration
		{ after(grammarAccess.getProcedure_or_function_declarationAccess().getFunction_declarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_0()); }
		ruleparameter_group
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getGroup_1()); }
		(rule__Formal_parameter_section__Group_1__0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getGroup_2()); }
		(rule__Formal_parameter_section__Group_2__0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getGroup_3()); }
		(rule__Formal_parameter_section__Group_3__0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAccess().getTRUETerminalRuleCall_0()); }
		RULE_TRUE
		{ after(grammarAccess.getBoolAccess().getTRUETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolAccess().getFALSETerminalRuleCall_1()); }
		RULE_FALSE
		{ after(grammarAccess.getBoolAccess().getFALSETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignAccess().getPLUSTerminalRuleCall_0()); }
		RULE_PLUS
		{ after(grammarAccess.getSignAccess().getPLUSTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignAccess().getMINUSTerminalRuleCall_1()); }
		RULE_MINUS
		{ after(grammarAccess.getSignAccess().getMINUSTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getHeadingAssignment_0()); }
	(rule__Program__HeadingAssignment_0)
	{ after(grammarAccess.getProgramAccess().getHeadingAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getBlockAssignment_1()); }
	(rule__Program__BlockAssignment_1)
	{ after(grammarAccess.getProgramAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__0__Impl
	rule__Program_heading_block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }
	'program'
	{ after(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__1__Impl
	rule__Program_heading_block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); }
	(rule__Program_heading_block__NameAssignment_1)
	{ after(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__2__Impl
	rule__Program_heading_block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getGroup_2()); }
	(rule__Program_heading_block__Group_2__0)?
	{ after(grammarAccess.getProgram_heading_blockAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group_2__0__Impl
	rule__Program_heading_block__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getProgram_heading_blockAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group_2__1__Impl
	rule__Program_heading_block__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getIdentifiersAssignment_2_1()); }
	(rule__Program_heading_block__IdentifiersAssignment_2_1)
	{ after(grammarAccess.getProgram_heading_blockAccess().getIdentifiersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getProgram_heading_blockAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); }
	(rule__Identifier_list__NamesAssignment_0)
	{ after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
	(rule__Identifier_list__Group_1__0)*
	{ after(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__0__Impl
	rule__Identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); }
	(rule__Identifier_list__NamesAssignment_1_1)
	{ after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getAlternatives_0()); }
	(rule__Block__Alternatives_0)*
	{ after(grammarAccess.getBlockAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
	(rule__Block__StatementAssignment_1)
	{ after(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group__0__Impl
	rule__Constant_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }
	'const'
	{ after(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
		(rule__Constant_definition_part__Group_1__0)
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
		(rule__Constant_definition_part__Group_1__0)*
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group_1__0__Impl
	rule__Constant_definition_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getConstantsAssignment_1_0()); }
	(rule__Constant_definition_part__ConstantsAssignment_1_0)
	{ after(grammarAccess.getConstant_definition_partAccess().getConstantsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__0__Impl
	rule__Constant_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); }
	(rule__Constant_definition__NameAssignment_0)
	{ after(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__1__Impl
	rule__Constant_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getEQUALTerminalRuleCall_1()); }
	RULE_EQUAL
	{ after(grammarAccess.getConstant_definitionAccess().getEQUALTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
	ruleconstant
	{ after(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_1__0__Impl
	rule__Constant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getSignParserRuleCall_1_0()); }
	rulesign
	{ after(grammarAccess.getConstantAccess().getSignParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getUnsigned_numberParserRuleCall_1_1()); }
	ruleunsigned_number
	{ after(grammarAccess.getConstantAccess().getUnsigned_numberParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__0__Impl
	rule__Constant__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getSignParserRuleCall_3_0()); }
	rulesign
	{ after(grammarAccess.getConstantAccess().getSignParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getNamesAssignment_3_1()); }
	(rule__Constant__NamesAssignment_3_1)
	{ after(grammarAccess.getConstantAccess().getNamesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__0__Impl
	rule__Variable_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getVARTerminalRuleCall_0()); }
	RULE_VAR
	{ after(grammarAccess.getVariable_declaration_partAccess().getVARTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__1__Impl
	rule__Variable_declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_1()); }
	(rule__Variable_declaration_part__VariableAssignment_1)
	{ after(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__2__Impl
	rule__Variable_declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getGroup_2()); }
	(rule__Variable_declaration_part__Group_2__0)*
	{ after(grammarAccess.getVariable_declaration_partAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group_2__0__Impl
	rule__Variable_declaration_part__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_2_1()); }
	(rule__Variable_declaration_part__VariableAssignment_2_1)
	{ after(grammarAccess.getVariable_declaration_partAccess().getVariableAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration__Group__0__Impl
	rule__Variable_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declarationAccess().getIdentifier_listParserRuleCall_0()); }
	ruleidentifier_list
	{ after(grammarAccess.getVariable_declarationAccess().getIdentifier_listParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration__Group__1__Impl
	rule__Variable_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVariable_declarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declarationAccess().getTypesAssignment_2()); }
	(rule__Variable_declaration__TypesAssignment_2)
	{ after(grammarAccess.getVariable_declarationAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__0__Impl
	rule__Compound_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); }
	'begin'
	{ after(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__1__Impl
	rule__Compound_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); }
	(rule__Compound_statement__SequenceAssignment_1)
	{ after(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); }
	'end'
	{ after(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group__0__Impl
	rule__Statements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getStatementsAssignment_0()); }
	(rule__Statements__StatementsAssignment_0)
	{ after(grammarAccess.getStatementsAccess().getStatementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getGroup_1()); }
	(rule__Statements__Group_1__0)*
	{ after(grammarAccess.getStatementsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statements__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group_1__0__Impl
	rule__Statements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getStatementsAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementsAccess().getStatementsAssignment_1_1()); }
	(rule__Statements__StatementsAssignment_1_1)
	{ after(grammarAccess.getStatementsAccess().getStatementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLabelAssignment_0_0()); }
	(rule__Statement__LabelAssignment_0_0)
	{ after(grammarAccess.getStatementAccess().getLabelAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
	rule__Statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getStatementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAssignment_0_2()); }
	(rule__Statement__StatementAssignment_0_2)
	{ after(grammarAccess.getStatementAccess().getStatementAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_1_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAssignment_1_1()); }
	(rule__Statement__StatementAssignment_1_1)?
	{ after(grammarAccess.getStatementAccess().getStatementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__0__Impl
	rule__Assignment_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getVariableAssignment_0()); }
	(rule__Assignment_statement__VariableAssignment_0)
	{ after(grammarAccess.getAssignment_statementAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__1__Impl
	rule__Assignment_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getASSIGNTerminalRuleCall_1()); }
	RULE_ASSIGN
	{ after(grammarAccess.getAssignment_statementAccess().getASSIGNTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); }
	(rule__Assignment_statement__ExpressionAssignment_2)
	{ after(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_0()); }
	(rule__Variable__Alternatives_0)
	{ after(grammarAccess.getVariableAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_1()); }
	(rule__Variable__Alternatives_1)*
	{ after(grammarAccess.getVariableAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_0_0__0__Impl
	rule__Variable__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommercialAtKeyword_0_0_0()); }
	'@'
	{ after(grammarAccess.getVariableAccess().getCommercialAtKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNamesAssignment_0_0_1()); }
	(rule__Variable__NamesAssignment_0_0_1)
	{ after(grammarAccess.getVariableAccess().getNamesAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__0__Impl
	rule__Variable__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_1_0_0()); }
	'['
	{ after(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__1__Impl
	rule__Variable__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getExpressionAssignment_1_0_1()); }
	(rule__Variable__ExpressionAssignment_1_0_1)
	{ after(grammarAccess.getVariableAccess().getExpressionAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__2__Impl
	rule__Variable__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_1_0_2()); }
	(rule__Variable__Group_1_0_2__0)*
	{ after(grammarAccess.getVariableAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_1_0_3()); }
	']'
	{ after(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0_2__0__Impl
	rule__Variable__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommaKeyword_1_0_2_0()); }
	','
	{ after(grammarAccess.getVariableAccess().getCommaKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getExpressionAssignment_1_0_2_1()); }
	(rule__Variable__ExpressionAssignment_1_0_2_1)
	{ after(grammarAccess.getVariableAccess().getExpressionAssignment_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__0__Impl
	rule__Variable__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getLeftParenthesisFullStopKeyword_1_1_0()); }
	'(.'
	{ after(grammarAccess.getVariableAccess().getLeftParenthesisFullStopKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__1__Impl
	rule__Variable__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_1()); }
	(rule__Variable__ExpressionAssignment_1_1_1)
	{ after(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__2__Impl
	rule__Variable__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_1_1_2()); }
	(rule__Variable__Group_1_1_2__0)*
	{ after(grammarAccess.getVariableAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getFullStopRightParenthesisKeyword_1_1_3()); }
	'.)'
	{ after(grammarAccess.getVariableAccess().getFullStopRightParenthesisKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1_2__0__Impl
	rule__Variable__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommaKeyword_1_1_2_0()); }
	','
	{ after(grammarAccess.getVariableAccess().getCommaKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_2_1()); }
	(rule__Variable__ExpressionAssignment_1_1_2_1)
	{ after(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_2__0__Impl
	rule__Variable__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getFullStopKeyword_1_2_0()); }
	'.'
	{ after(grammarAccess.getVariableAccess().getFullStopKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNamesAssignment_1_2_1()); }
	(rule__Variable__NamesAssignment_1_2_1)
	{ after(grammarAccess.getVariableAccess().getNamesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionsAssignment_0()); }
	(rule__Expression__ExpressionsAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__Expression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionsAssignment_1_1()); }
	(rule__Expression__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group__0__Impl
	rule__Simple_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getTermsAssignment_0()); }
	(rule__Simple_expression__TermsAssignment_0)
	{ after(grammarAccess.getSimple_expressionAccess().getTermsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
	(rule__Simple_expression__Group_1__0)?
	{ after(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group_1__0__Impl
	rule__Simple_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_1_0()); }
	(rule__Simple_expression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getExpressionAssignment_1_1()); }
	(rule__Simple_expression__ExpressionAssignment_1_1)
	{ after(grammarAccess.getSimple_expressionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorsAssignment_0()); }
	(rule__Term__FactorsAssignment_0)
	{ after(grammarAccess.getTermAccess().getFactorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)?
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getOperatorsAssignment_1_0()); }
	(rule__Term__OperatorsAssignment_1_0)
	{ after(grammarAccess.getTermAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getTermsAssignment_1_1()); }
	(rule__Term__TermsAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getTermsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signed_factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signed_factor__Group__0__Impl
	rule__Signed_factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSigned_factorAccess().getAlternatives_0()); }
	(rule__Signed_factor__Alternatives_0)?
	{ after(grammarAccess.getSigned_factorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signed_factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSigned_factorAccess().getFactorsAssignment_1()); }
	(rule__Signed_factor__FactorsAssignment_1)
	{ after(grammarAccess.getSigned_factorAccess().getFactorsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
	rule__Factor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getExpressionAssignment_1_1()); }
	(rule__Factor__ExpressionAssignment_1_1)
	{ after(grammarAccess.getFactorAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_5__0__Impl
	rule__Factor__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getNOTTerminalRuleCall_5_0()); }
	RULE_NOT
	{ after(grammarAccess.getFactorAccess().getNOTTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorAssignment_5_1()); }
	(rule__Factor__FactorAssignment_5_1)
	{ after(grammarAccess.getFactorAccess().getFactorAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_0__0__Impl
	rule__Set__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getSetAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_0__1__Impl
	rule__Set__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getElementsAssignment_0_1()); }
	(rule__Set__ElementsAssignment_0_1)
	{ after(grammarAccess.getSetAccess().getElementsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getSetAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_1__0__Impl
	rule__Set__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getLeftParenthesisFullStopKeyword_1_0()); }
	'(.'
	{ after(grammarAccess.getSetAccess().getLeftParenthesisFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_1__1__Impl
	rule__Set__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getElementsAssignment_1_1()); }
	(rule__Set__ElementsAssignment_1_1)
	{ after(grammarAccess.getSetAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getFullStopRightParenthesisKeyword_1_2()); }
	'.)'
	{ after(grammarAccess.getSetAccess().getFullStopRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElementsAssignment_0()); }
	(rule__ElementList__ElementsAssignment_0)
	{ after(grammarAccess.getElementListAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)*
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElementsAssignment_1_1()); }
	(rule__ElementList__ElementsAssignment_1_1)
	{ after(grammarAccess.getElementListAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getExpressionsAssignment_0()); }
	(rule__Element__ExpressionsAssignment_0)
	{ after(grammarAccess.getElementAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_1()); }
	(rule__Element__Group_1__0)?
	{ after(grammarAccess.getElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__0__Impl
	rule__Element__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getDotdotAssignment_1_0()); }
	(rule__Element__DotdotAssignment_1_0)
	{ after(grammarAccess.getElementAccess().getDotdotAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getExpressionsAssignment_1_1()); }
	(rule__Element__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getElementAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scalar_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar_type__Group__0__Impl
	rule__Scalar_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalar_typeAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getScalar_typeAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar_type__Group__1__Impl
	rule__Scalar_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalar_typeAccess().getIdentifier_listParserRuleCall_1()); }
	ruleidentifier_list
	{ after(grammarAccess.getScalar_typeAccess().getIdentifier_listParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalar_typeAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getScalar_typeAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subrange_type__Group__0__Impl
	rule__Subrange_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubrange_typeAccess().getConstantsAssignment_0()); }
	(rule__Subrange_type__ConstantsAssignment_0)
	{ after(grammarAccess.getSubrange_typeAccess().getConstantsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subrange_type__Group__1__Impl
	rule__Subrange_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubrange_typeAccess().getDOTDOTTerminalRuleCall_1()); }
	RULE_DOTDOT
	{ after(grammarAccess.getSubrange_typeAccess().getDOTDOTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subrange_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubrange_typeAccess().getConstantsAssignment_2()); }
	(rule__Subrange_type__ConstantsAssignment_2)
	{ after(grammarAccess.getSubrange_typeAccess().getConstantsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__String_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String_type__Group__0__Impl
	rule__String_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString_typeAccess().getStringKeyword_0()); }
	'string'
	{ after(grammarAccess.getString_typeAccess().getStringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String_type__Group__1__Impl
	rule__String_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString_typeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getString_typeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String_type__Group__2__Impl
	rule__String_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString_typeAccess().getAlternatives_2()); }
	(rule__String_type__Alternatives_2)
	{ after(grammarAccess.getString_typeAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String_type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString_typeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getString_typeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_chr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_chr__Group__0__Impl
	rule__Constant_chr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_chrAccess().getChrKeyword_0()); }
	'chr'
	{ after(grammarAccess.getConstant_chrAccess().getChrKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_chr__Group__1__Impl
	rule__Constant_chr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_chrAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConstant_chrAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_chr__Group__2__Impl
	rule__Constant_chr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_chrAccess().getNumbersAssignment_2()); }
	(rule__Constant_chr__NumbersAssignment_2)
	{ after(grammarAccess.getConstant_chrAccess().getNumbersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_chr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_chrAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConstant_chrAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group__0__Impl
	rule__Procedure_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getNamesAssignment_0()); }
	(rule__Procedure_statement__NamesAssignment_0)
	{ after(grammarAccess.getProcedure_statementAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getGroup_1()); }
	(rule__Procedure_statement__Group_1__0)?
	{ after(grammarAccess.getProcedure_statementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group_1__0__Impl
	rule__Procedure_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getProcedure_statementAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group_1__1__Impl
	rule__Procedure_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getTypesAssignment_1_1()); }
	(rule__Procedure_statement__TypesAssignment_1_1)
	{ after(grammarAccess.getProcedure_statementAccess().getTypesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_statement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_statementAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getProcedure_statementAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getActual_parameterParserRuleCall_0()); }
	ruleactual_parameter
	{ after(grammarAccess.getParameter_listAccess().getActual_parameterParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getGroup_1()); }
	(rule__Parameter_list__Group_1__0)*
	{ after(grammarAccess.getParameter_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__0__Impl
	rule__Parameter_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getTypesAssignment_1_1()); }
	(rule__Parameter_list__TypesAssignment_1_1)
	{ after(grammarAccess.getParameter_listAccess().getTypesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_and_function_declaration_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_and_function_declaration_part__Group__0__Impl
	rule__Procedure_and_function_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getProcedure_or_function_declarationParserRuleCall_0()); }
	ruleprocedure_or_function_declaration
	{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getProcedure_or_function_declarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_and_function_declaration_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__0__Impl
	rule__Procedure_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getPROCEDURETerminalRuleCall_0()); }
	RULE_PROCEDURE
	{ after(grammarAccess.getProcedure_declarationAccess().getPROCEDURETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__1__Impl
	rule__Procedure_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getNamesAssignment_1()); }
	(rule__Procedure_declaration__NamesAssignment_1)
	{ after(grammarAccess.getProcedure_declarationAccess().getNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__2__Impl
	rule__Procedure_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getTypesAssignment_2()); }
	(rule__Procedure_declaration__TypesAssignment_2)?
	{ after(grammarAccess.getProcedure_declarationAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__3__Impl
	rule__Procedure_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_4()); }
	(rule__Procedure_declaration__BlockAssignment_4)
	{ after(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_type__Group__0__Impl
	rule__Procedure_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_typeAccess().getProcedure_typeAction_0()); }
	()
	{ after(grammarAccess.getProcedure_typeAccess().getProcedure_typeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_type__Group__1__Impl
	rule__Procedure_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_typeAccess().getPROCEDURETerminalRuleCall_1()); }
	RULE_PROCEDURE
	{ after(grammarAccess.getProcedure_typeAccess().getPROCEDURETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_typeAccess().getTypesAssignment_2()); }
	(rule__Procedure_type__TypesAssignment_2)?
	{ after(grammarAccess.getProcedure_typeAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__0__Impl
	rule__Function_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getFUNCTIONTerminalRuleCall_0()); }
	RULE_FUNCTION
	{ after(grammarAccess.getFunction_declarationAccess().getFUNCTIONTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__1__Impl
	rule__Function_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getNamesAssignment_1()); }
	(rule__Function_declaration__NamesAssignment_1)
	{ after(grammarAccess.getFunction_declarationAccess().getNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__2__Impl
	rule__Function_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getTypesAssignment_2()); }
	(rule__Function_declaration__TypesAssignment_2)?
	{ after(grammarAccess.getFunction_declarationAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__3__Impl
	rule__Function_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getFunction_declarationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__4__Impl
	rule__Function_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getTypesAssignment_4()); }
	(rule__Function_declaration__TypesAssignment_4)
	{ after(grammarAccess.getFunction_declarationAccess().getTypesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__5__Impl
	rule__Function_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getBlockAssignment_6()); }
	(rule__Function_declaration__BlockAssignment_6)
	{ after(grammarAccess.getFunction_declarationAccess().getBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_type__Group__0__Impl
	rule__Function_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_typeAccess().getFUNCTIONTerminalRuleCall_0()); }
	RULE_FUNCTION
	{ after(grammarAccess.getFunction_typeAccess().getFUNCTIONTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_type__Group__1__Impl
	rule__Function_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_typeAccess().getTypesAssignment_1()); }
	(rule__Function_type__TypesAssignment_1)?
	{ after(grammarAccess.getFunction_typeAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_type__Group__2__Impl
	rule__Function_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_typeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFunction_typeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_typeAccess().getTypesAssignment_3()); }
	(rule__Function_type__TypesAssignment_3)
	{ after(grammarAccess.getFunction_typeAccess().getTypesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_designator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__0__Impl
	rule__Function_designator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getNamesAssignment_0()); }
	(rule__Function_designator__NamesAssignment_0)
	{ after(grammarAccess.getFunction_designatorAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__1__Impl
	rule__Function_designator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__2__Impl
	rule__Function_designator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getTypesAssignment_2()); }
	(rule__Function_designator__TypesAssignment_2)
	{ after(grammarAccess.getFunction_designatorAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__0__Impl
	rule__Formal_parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__1__Impl
	rule__Formal_parameter_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getFormal_parameter_sectionParserRuleCall_1()); }
	ruleformal_parameter_section
	{ after(grammarAccess.getFormal_parameter_listAccess().getFormal_parameter_sectionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__2__Impl
	rule__Formal_parameter_list__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
	(rule__Formal_parameter_list__Group_2__0)*
	{ after(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group_2__0__Impl
	rule__Formal_parameter_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getTypesAssignment_2_1()); }
	(rule__Formal_parameter_list__TypesAssignment_2_1)
	{ after(grammarAccess.getFormal_parameter_listAccess().getTypesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_section__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_1__0__Impl
	rule__Formal_parameter_section__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getVARTerminalRuleCall_1_0()); }
	RULE_VAR
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getVARTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_1_1()); }
	ruleparameter_group
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_section__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_2__0__Impl
	rule__Formal_parameter_section__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getFUNCTIONTerminalRuleCall_2_0()); }
	RULE_FUNCTION
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getFUNCTIONTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_2_1()); }
	ruleparameter_group
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_section__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_3__0__Impl
	rule__Formal_parameter_section__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getPROCEDURETerminalRuleCall_3_0()); }
	RULE_PROCEDURE
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getPROCEDURETerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_section__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_3_1()); }
	ruleparameter_group
	{ after(grammarAccess.getFormal_parameter_sectionAccess().getParameter_groupParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_group__Group__0__Impl
	rule__Parameter_group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_groupAccess().getIdentifier_listParserRuleCall_0()); }
	ruleidentifier_list
	{ after(grammarAccess.getParameter_groupAccess().getIdentifier_listParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_group__Group__1__Impl
	rule__Parameter_group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_groupAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameter_groupAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_group__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_groupAccess().getTypesAssignment_2()); }
	(rule__Parameter_group__TypesAssignment_2)
	{ after(grammarAccess.getParameter_groupAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pascal__ProgramAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
		ruleprogram
		{ after(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__HeadingAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); }
		ruleprogram_heading_block
		{ after(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleblock
		{ after(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__IdentifiersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgram_heading_blockAccess().getIdentifiersIdentifier_listParserRuleCall_2_1_0()); }
		ruleidentifier_list
		{ after(grammarAccess.getProgram_heading_blockAccess().getIdentifiersIdentifier_listParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__NamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ConstantpartAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getConstantpartConstant_definition_partParserRuleCall_0_0_0()); }
		ruleconstant_definition_part
		{ after(grammarAccess.getBlockAccess().getConstantpartConstant_definition_partParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__VariablepartAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getVariablepartVariable_declaration_partParserRuleCall_0_1_0()); }
		rulevariable_declaration_part
		{ after(grammarAccess.getBlockAccess().getVariablepartVariable_declaration_partParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Procedure_function_partAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getProcedure_function_partProcedure_and_function_declaration_partParserRuleCall_0_2_0()); }
		ruleprocedure_and_function_declaration_part
		{ after(grammarAccess.getBlockAccess().getProcedure_function_partProcedure_and_function_declaration_partParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementCompound_statementParserRuleCall_1_0()); }
		rulecompound_statement
		{ after(grammarAccess.getBlockAccess().getStatementCompound_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__ConstantsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getConstantsConstant_definitionParserRuleCall_1_0_0()); }
		ruleconstant_definition
		{ after(grammarAccess.getConstant_definition_partAccess().getConstantsConstant_definitionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NamesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNamesIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantAccess().getNamesIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NamesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNamesIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantAccess().getNamesIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__StringAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_1_0()); }
		rulevariable_declaration
		{ after(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__VariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_2_1_0()); }
		rulevariable_declaration
		{ after(grammarAccess.getVariable_declaration_partAccess().getVariableVariable_declarationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declarationAccess().getTypesTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getVariable_declarationAccess().getTypesTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__SequenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompound_statementAccess().getSequenceStatementsParserRuleCall_1_0()); }
		rulestatements
		{ after(grammarAccess.getCompound_statementAccess().getSequenceStatementsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__StatementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0_0()); }
		rulestatement
		{ after(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__StatementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_1_1_0()); }
		rulestatement
		{ after(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LabelAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabelLabelParserRuleCall_0_0_0()); }
		rulelabel
		{ after(grammarAccess.getStatementAccess().getLabelLabelParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementUnlabelled_statementParserRuleCall_0_2_0()); }
		ruleunlabelled_statement
		{ after(grammarAccess.getStatementAccess().getStatementUnlabelled_statementParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementUnlabelled_statementParserRuleCall_1_1_0()); }
		ruleunlabelled_statement
		{ after(grammarAccess.getStatementAccess().getStatementUnlabelled_statementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unlabelled_statement__SimpleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getSimpleSimple_statementParserRuleCall_0_0()); }
		rulesimple_statement
		{ after(grammarAccess.getUnlabelled_statementAccess().getSimpleSimple_statementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unlabelled_statement__StructuredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlabelled_statementAccess().getStructuredStructured_statementParserRuleCall_1_0()); }
		rulestructured_statement
		{ after(grammarAccess.getUnlabelled_statementAccess().getStructuredStructured_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NumberAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getNumberUnsigned_integerParserRuleCall_0()); }
		ruleunsigned_integer
		{ after(grammarAccess.getLabelAccess().getNumberUnsigned_integerParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__AssignmentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); }
		ruleassignment_statement
		{ after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__ProcedureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getProcedureProcedure_statementParserRuleCall_1_0()); }
		ruleprocedure_statement
		{ after(grammarAccess.getSimple_statementAccess().getProcedureProcedure_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__GotoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getGotoGoto_statementParserRuleCall_2_0()); }
		rulegoto_statement
		{ after(grammarAccess.getSimple_statementAccess().getGotoGoto_statementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getVariableVariableParserRuleCall_0_0()); }
		rulevariable
		{ after(grammarAccess.getAssignment_statementAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NamesAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNamesIDTerminalRuleCall_0_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNamesIDTerminalRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NamesAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNamesIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNamesIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ExpressionAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ExpressionAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_0_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ExpressionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ExpressionAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
		ruleexpression
		{ after(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NamesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNamesIDTerminalRuleCall_1_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNamesIDTerminalRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_0_0()); }
		rulesimple_expression
		{ after(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOperatorsRelational_operatorParserRuleCall_1_0_0()); }
		rulerelational_operator
		{ after(grammarAccess.getExpressionAccess().getOperatorsRelational_operatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__TermsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_0_0()); }
		ruleterm
		{ after(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getOperatorsAdditive_operatorParserRuleCall_1_0_0()); }
		ruleadditive_operator
		{ after(grammarAccess.getSimple_expressionAccess().getOperatorsAdditive_operatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getExpressionSimple_expressionParserRuleCall_1_1_0()); }
		rulesimple_expression
		{ after(grammarAccess.getSimple_expressionAccess().getExpressionSimple_expressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getFactorsSigned_factorParserRuleCall_0_0()); }
		rulesigned_factor
		{ after(grammarAccess.getTermAccess().getFactorsSigned_factorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getOperatorsMultiplicative_operatorParserRuleCall_1_0_0()); }
		rulemultiplicative_operator
		{ after(grammarAccess.getTermAccess().getOperatorsMultiplicative_operatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TermsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTermsTermParserRuleCall_1_1_0()); }
		ruleterm
		{ after(grammarAccess.getTermAccess().getTermsTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__OperatorsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getOperatorsPLUSTerminalRuleCall_0_0_0()); }
		RULE_PLUS
		{ after(grammarAccess.getSigned_factorAccess().getOperatorsPLUSTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__OperatorsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getOperatorsMINUSTerminalRuleCall_0_1_0()); }
		RULE_MINUS
		{ after(grammarAccess.getSigned_factorAccess().getOperatorsMINUSTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_factor__FactorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_factorAccess().getFactorsFactorParserRuleCall_1_0()); }
		rulefactor
		{ after(grammarAccess.getSigned_factorAccess().getFactorsFactorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); }
		rulevariable
		{ after(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ConstantAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getConstantUnsigned_constantParserRuleCall_3_0()); }
		ruleunsigned_constant
		{ after(grammarAccess.getFactorAccess().getConstantUnsigned_constantParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__SetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getSetSetParserRuleCall_4_0()); }
		ruleset
		{ after(grammarAccess.getFactorAccess().getSetSetParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__FactorAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getFactorFactorParserRuleCall_5_1_0()); }
		rulefactor
		{ after(grammarAccess.getFactorAccess().getFactorFactorParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__BooleanAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getBooleanBoolParserRuleCall_6_0()); }
		rulebool
		{ after(grammarAccess.getFactorAccess().getBooleanBoolParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ElementsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getElementsElementListParserRuleCall_0_1_0()); }
		ruleelementList
		{ after(grammarAccess.getSetAccess().getElementsElementListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getElementsElementListParserRuleCall_1_1_0()); }
		ruleelementList
		{ after(grammarAccess.getSetAccess().getElementsElementListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_0_0()); }
		ruleelement
		{ after(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_1_0()); }
		ruleelement
		{ after(grammarAccess.getElementListAccess().getElementsElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionsExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getElementAccess().getExpressionsExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__DotdotAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getDotdotDOTDOTTerminalRuleCall_1_0_0()); }
		RULE_DOTDOT
		{ after(grammarAccess.getElementAccess().getDotdotDOTDOTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getElementAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeSimple_typeParserRuleCall_0()); }
		rulesimple_type
		{ after(grammarAccess.getTypeAccess().getTypeSimple_typeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__TypesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesScalar_typeParserRuleCall_0_0()); }
		rulescalar_type
		{ after(grammarAccess.getSimple_typeAccess().getTypesScalar_typeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesSubrange_typeParserRuleCall_1_0()); }
		rulesubrange_type
		{ after(grammarAccess.getSimple_typeAccess().getTypesSubrange_typeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesType_identifierParserRuleCall_2_0()); }
		ruletype_identifier
		{ after(grammarAccess.getSimple_typeAccess().getTypesType_identifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__TypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getTypesString_typeParserRuleCall_3_0()); }
		rulestring_type
		{ after(grammarAccess.getSimple_typeAccess().getTypesString_typeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__ConstantsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubrange_typeAccess().getConstantsConstantParserRuleCall_0_0()); }
		ruleconstant
		{ after(grammarAccess.getSubrange_typeAccess().getConstantsConstantParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__ConstantsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubrange_typeAccess().getConstantsConstantParserRuleCall_2_0()); }
		ruleconstant
		{ after(grammarAccess.getSubrange_typeAccess().getConstantsConstantParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getType_identifierAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeCHARKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getTypeCHARKeyword_1_0_0()); }
			'CHAR'
			{ after(grammarAccess.getType_identifierAccess().getTypeCHARKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getTypeCHARKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeBooleanKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getTypeBooleanKeyword_1_1_0()); }
			'boolean'
			{ after(grammarAccess.getType_identifierAccess().getTypeBooleanKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getTypeBooleanKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__TypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeIntegerKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getTypeIntegerKeyword_1_2_0()); }
			'integer'
			{ after(grammarAccess.getType_identifierAccess().getTypeIntegerKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getTypeIntegerKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__TypeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeRealKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getTypeRealKeyword_1_3_0()); }
			'real'
			{ after(grammarAccess.getType_identifierAccess().getTypeRealKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getTypeRealKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_identifier__TypeAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_identifierAccess().getTypeStringKeyword_1_4_0()); }
		(
			{ before(grammarAccess.getType_identifierAccess().getTypeStringKeyword_1_4_0()); }
			'string'
			{ after(grammarAccess.getType_identifierAccess().getTypeStringKeyword_1_4_0()); }
		)
		{ after(grammarAccess.getType_identifierAccess().getTypeStringKeyword_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__NamesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_typeAccess().getNamesIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getString_typeAccess().getNamesIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_type__NumberAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_typeAccess().getNumberUnsigned_numberParserRuleCall_2_1_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getString_typeAccess().getNumberUnsigned_numberParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNumberUnsigned_numberParserRuleCall_0_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getUnsigned_constantAccess().getNumberUnsigned_numberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__CharAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getCharConstant_chrParserRuleCall_1_0()); }
		ruleconstant_chr
		{ after(grammarAccess.getUnsigned_constantAccess().getCharConstant_chrParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getUnsigned_constantAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_constant__NilAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_constantAccess().getNilNILTerminalRuleCall_3_0()); }
		RULE_NIL
		{ after(grammarAccess.getUnsigned_constantAccess().getNilNILTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__NumbersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getNumbersUnsigned_integerParserRuleCall_0_0()); }
		ruleunsigned_integer
		{ after(grammarAccess.getUnsigned_numberAccess().getNumbersUnsigned_integerParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__NumbersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getNumbersUnsigned_realParserRuleCall_1_0()); }
		ruleunsigned_real
		{ after(grammarAccess.getUnsigned_numberAccess().getNumbersUnsigned_realParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_chr__NumbersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_chrAccess().getNumbersUnsigned_integerParserRuleCall_2_0()); }
		ruleunsigned_integer
		{ after(grammarAccess.getConstant_chrAccess().getNumbersUnsigned_integerParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_statementAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getProcedure_statementAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_statement__TypesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_statementAccess().getTypesParameter_listParserRuleCall_1_1_0()); }
		ruleparameter_list
		{ after(grammarAccess.getProcedure_statementAccess().getTypesParameter_listParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__TypesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_listAccess().getTypesActual_parameterParserRuleCall_1_1_0()); }
		ruleactual_parameter
		{ after(grammarAccess.getParameter_listAccess().getTypesActual_parameterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcedure_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getTypesFormal_parameter_listParserRuleCall_2_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getProcedure_declarationAccess().getTypesFormal_parameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__BlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_4_0()); }
		ruleblock
		{ after(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_type__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_typeAccess().getTypesFormal_parameter_listParserRuleCall_2_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getProcedure_typeAccess().getTypesFormal_parameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunction_declarationAccess().getNamesIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getTypesFormal_parameter_listParserRuleCall_2_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getFunction_declarationAccess().getTypesFormal_parameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__TypesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getTypesResult_typeParserRuleCall_4_0()); }
		ruleresult_type
		{ after(grammarAccess.getFunction_declarationAccess().getTypesResult_typeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__BlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_6_0()); }
		ruleblock
		{ after(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_typeAccess().getTypesFormal_parameter_listParserRuleCall_1_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getFunction_typeAccess().getTypesFormal_parameter_listParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_type__TypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_typeAccess().getTypesResult_typeParserRuleCall_3_0()); }
		ruleresult_type
		{ after(grammarAccess.getFunction_typeAccess().getTypesResult_typeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunction_designatorAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getTypesParameter_listParserRuleCall_2_0()); }
		ruleparameter_list
		{ after(grammarAccess.getFunction_designatorAccess().getTypesParameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__TypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getTypesFormal_parameter_sectionParserRuleCall_2_1_0()); }
		ruleformal_parameter_section
		{ after(grammarAccess.getFormal_parameter_listAccess().getTypesFormal_parameter_sectionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_group__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_groupAccess().getTypesType_identifierParserRuleCall_2_0()); }
		ruletype_identifier
		{ after(grammarAccess.getParameter_groupAccess().getTypesType_identifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VAR : ('V'|'v') ('A'|'a') ('R'|'r');

RULE_NIL : ('N'|'n') ('I'|'i') ('L'|'l');

RULE_DOTDOT : '..';

RULE_NOT : ('N'|'n') ('O'|'o') ('T'|'t');

RULE_TRUE : ('T'|'t') ('R'|'r') ('U'|'u') ('e'|'E');

RULE_FALSE : ('F'|'f') ('A'|'a') ('L'|'l') ('S'|'s') ('E'|'e');

RULE_STAR : '*';

RULE_SLASH : '/';

RULE_DIV : ('D'|'d') ('I'|'i') ('V'|'v');

RULE_MOD : ('M'|'m') ('O'|'o') ('D'|'d');

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_AND : ('A'|'a') ('N'|'n') ('D'|'d');

RULE_OR : ('O'|'o') ('R'|'r');

RULE_ASSIGN : ':=';

RULE_NUM_INT : ('0'..'9')+;

RULE_NUM_REAL : ('0'..'9')+ (('.' ('0'..'9')+ RULE_EXPONENT?)?|RULE_EXPONENT);

fragment RULE_EXPONENT : 'e' (RULE_PLUS|RULE_MINUS)? ('0'..'9')+;

RULE_EQUAL : '=';

RULE_NOT_EQUAL : '<>';

RULE_LT : '<';

RULE_LE : '<=';

RULE_GE : '>=';

RULE_GT : '>';

RULE_IN : ('I'|'i') ('N'|'n');

RULE_PROCEDURE : ('P'|'p') ('R'|'r') ('O'|'o') ('C'|'c') ('E'|'e') ('D'|'d') ('U'|'u') ('R'|'r') ('E'|'e');

RULE_FUNCTION : ('F'|'f') ('U'|'u') ('N'|'n') ('C'|'c') ('T'|'t') ('I'|'i') ('O'|'o') ('N'|'n');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

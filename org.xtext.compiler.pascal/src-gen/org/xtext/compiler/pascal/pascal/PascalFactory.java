/**
 * generated by Xtext 2.15.0
 */
package org.xtext.compiler.pascal.pascal;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.compiler.pascal.pascal.PascalPackage
 * @generated
 */
public interface PascalFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PascalFactory eINSTANCE = org.xtext.compiler.pascal.pascal.impl.PascalFactoryImpl.init();

  /**
   * Returns a new object of class '<em>pascal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>pascal</em>'.
   * @generated
   */
  pascal createpascal();

  /**
   * Returns a new object of class '<em>program</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>program</em>'.
   * @generated
   */
  program createprogram();

  /**
   * Returns a new object of class '<em>program heading block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>program heading block</em>'.
   * @generated
   */
  program_heading_block createprogram_heading_block();

  /**
   * Returns a new object of class '<em>identifier list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>identifier list</em>'.
   * @generated
   */
  identifier_list createidentifier_list();

  /**
   * Returns a new object of class '<em>identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>identifier</em>'.
   * @generated
   */
  identifier createidentifier();

  /**
   * Returns a new object of class '<em>block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>block</em>'.
   * @generated
   */
  block createblock();

  /**
   * Returns a new object of class '<em>constant definition part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant definition part</em>'.
   * @generated
   */
  constant_definition_part createconstant_definition_part();

  /**
   * Returns a new object of class '<em>constant definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant definition</em>'.
   * @generated
   */
  constant_definition createconstant_definition();

  /**
   * Returns a new object of class '<em>constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant</em>'.
   * @generated
   */
  constant createconstant();

  /**
   * Returns a new object of class '<em>type definition part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type definition part</em>'.
   * @generated
   */
  type_definition_part createtype_definition_part();

  /**
   * Returns a new object of class '<em>type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type definition</em>'.
   * @generated
   */
  type_definition createtype_definition();

  /**
   * Returns a new object of class '<em>variable declaration part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable declaration part</em>'.
   * @generated
   */
  variable_declaration_part createvariable_declaration_part();

  /**
   * Returns a new object of class '<em>variable declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable declaration</em>'.
   * @generated
   */
  variable_declaration createvariable_declaration();

  /**
   * Returns a new object of class '<em>compound statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>compound statement</em>'.
   * @generated
   */
  compound_statement createcompound_statement();

  /**
   * Returns a new object of class '<em>statements</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statements</em>'.
   * @generated
   */
  statements createstatements();

  /**
   * Returns a new object of class '<em>statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statement</em>'.
   * @generated
   */
  statement createstatement();

  /**
   * Returns a new object of class '<em>unlabelled statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unlabelled statement</em>'.
   * @generated
   */
  unlabelled_statement createunlabelled_statement();

  /**
   * Returns a new object of class '<em>simple statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple statement</em>'.
   * @generated
   */
  simple_statement createsimple_statement();

  /**
   * Returns a new object of class '<em>assignment statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>assignment statement</em>'.
   * @generated
   */
  assignment_statement createassignment_statement();

  /**
   * Returns a new object of class '<em>variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable</em>'.
   * @generated
   */
  variable createvariable();

  /**
   * Returns a new object of class '<em>expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>expression</em>'.
   * @generated
   */
  expression createexpression();

  /**
   * Returns a new object of class '<em>simple expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple expression</em>'.
   * @generated
   */
  simple_expression createsimple_expression();

  /**
   * Returns a new object of class '<em>term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>term</em>'.
   * @generated
   */
  term createterm();

  /**
   * Returns a new object of class '<em>signed factor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>signed factor</em>'.
   * @generated
   */
  signed_factor createsigned_factor();

  /**
   * Returns a new object of class '<em>factor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>factor</em>'.
   * @generated
   */
  factor createfactor();

  /**
   * Returns a new object of class '<em>type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type</em>'.
   * @generated
   */
  type createtype();

  /**
   * Returns a new object of class '<em>simple type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple type</em>'.
   * @generated
   */
  simple_type createsimple_type();

  /**
   * Returns a new object of class '<em>subrange type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>subrange type</em>'.
   * @generated
   */
  subrange_type createsubrange_type();

  /**
   * Returns a new object of class '<em>structured type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>structured type</em>'.
   * @generated
   */
  structured_type createstructured_type();

  /**
   * Returns a new object of class '<em>unpacked structured type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unpacked structured type</em>'.
   * @generated
   */
  unpacked_structured_type createunpacked_structured_type();

  /**
   * Returns a new object of class '<em>dynamic array type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>dynamic array type</em>'.
   * @generated
   */
  dynamic_array_type createdynamic_array_type();

  /**
   * Returns a new object of class '<em>array type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>array type</em>'.
   * @generated
   */
  array_type createarray_type();

  /**
   * Returns a new object of class '<em>type list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type list</em>'.
   * @generated
   */
  type_list createtype_list();

  /**
   * Returns a new object of class '<em>index type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>index type</em>'.
   * @generated
   */
  index_type createindex_type();

  /**
   * Returns a new object of class '<em>component type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>component type</em>'.
   * @generated
   */
  component_type createcomponent_type();

  /**
   * Returns a new object of class '<em>type identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type identifier</em>'.
   * @generated
   */
  type_identifier createtype_identifier();

  /**
   * Returns a new object of class '<em>unsigned constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unsigned constant</em>'.
   * @generated
   */
  unsigned_constant createunsigned_constant();

  /**
   * Returns a new object of class '<em>unsigned number</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unsigned number</em>'.
   * @generated
   */
  unsigned_number createunsigned_number();

  /**
   * Returns a new object of class '<em>procedure statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure statement</em>'.
   * @generated
   */
  procedure_statement createprocedure_statement();

  /**
   * Returns a new object of class '<em>parameter list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter list</em>'.
   * @generated
   */
  parameter_list createparameter_list();

  /**
   * Returns a new object of class '<em>actual parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual parameter</em>'.
   * @generated
   */
  actual_parameter createactual_parameter();

  /**
   * Returns a new object of class '<em>structured statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>structured statement</em>'.
   * @generated
   */
  structured_statement createstructured_statement();

  /**
   * Returns a new object of class '<em>conditional statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>conditional statement</em>'.
   * @generated
   */
  conditional_statement createconditional_statement();

  /**
   * Returns a new object of class '<em>case statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>case statement</em>'.
   * @generated
   */
  case_statement createcase_statement();

  /**
   * Returns a new object of class '<em>case list element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>case list element</em>'.
   * @generated
   */
  case_list_element createcase_list_element();

  /**
   * Returns a new object of class '<em>const list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>const list</em>'.
   * @generated
   */
  const_list createconst_list();

  /**
   * Returns a new object of class '<em>procedure and function declaration part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure and function declaration part</em>'.
   * @generated
   */
  procedure_and_function_declaration_part createprocedure_and_function_declaration_part();

  /**
   * Returns a new object of class '<em>procedure or function declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure or function declaration</em>'.
   * @generated
   */
  procedure_or_function_declaration createprocedure_or_function_declaration();

  /**
   * Returns a new object of class '<em>procedure declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure declaration</em>'.
   * @generated
   */
  procedure_declaration createprocedure_declaration();

  /**
   * Returns a new object of class '<em>procedure type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure type</em>'.
   * @generated
   */
  procedure_type createprocedure_type();

  /**
   * Returns a new object of class '<em>function declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function declaration</em>'.
   * @generated
   */
  function_declaration createfunction_declaration();

  /**
   * Returns a new object of class '<em>function type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function type</em>'.
   * @generated
   */
  function_type createfunction_type();

  /**
   * Returns a new object of class '<em>function designator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function designator</em>'.
   * @generated
   */
  function_designator createfunction_designator();

  /**
   * Returns a new object of class '<em>formal parameter list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>formal parameter list</em>'.
   * @generated
   */
  formal_parameter_list createformal_parameter_list();

  /**
   * Returns a new object of class '<em>formal parameter section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>formal parameter section</em>'.
   * @generated
   */
  formal_parameter_section createformal_parameter_section();

  /**
   * Returns a new object of class '<em>parameter group</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter group</em>'.
   * @generated
   */
  parameter_group createparameter_group();

  /**
   * Returns a new object of class '<em>result type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>result type</em>'.
   * @generated
   */
  result_type createresult_type();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  PascalPackage getPascalPackage();

} //PascalFactory

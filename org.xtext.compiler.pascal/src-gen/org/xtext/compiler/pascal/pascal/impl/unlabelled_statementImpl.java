/**
 * generated by Xtext 2.15.0
 */
package org.xtext.compiler.pascal.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.compiler.pascal.pascal.PascalPackage;
import org.xtext.compiler.pascal.pascal.simple_statement;
import org.xtext.compiler.pascal.pascal.structured_statement;
import org.xtext.compiler.pascal.pascal.unlabelled_statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>unlabelled statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.compiler.pascal.pascal.impl.unlabelled_statementImpl#getSimple <em>Simple</em>}</li>
 *   <li>{@link org.xtext.compiler.pascal.pascal.impl.unlabelled_statementImpl#getStructured <em>Structured</em>}</li>
 * </ul>
 *
 * @generated
 */
public class unlabelled_statementImpl extends MinimalEObjectImpl.Container implements unlabelled_statement
{
  /**
   * The cached value of the '{@link #getSimple() <em>Simple</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimple()
   * @generated
   * @ordered
   */
  protected simple_statement simple;

  /**
   * The cached value of the '{@link #getStructured() <em>Structured</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructured()
   * @generated
   * @ordered
   */
  protected structured_statement structured;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected unlabelled_statementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.UNLABELLED_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public simple_statement getSimple()
  {
    return simple;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimple(simple_statement newSimple, NotificationChain msgs)
  {
    simple_statement oldSimple = simple;
    simple = newSimple;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNLABELLED_STATEMENT__SIMPLE, oldSimple, newSimple);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSimple(simple_statement newSimple)
  {
    if (newSimple != simple)
    {
      NotificationChain msgs = null;
      if (simple != null)
        msgs = ((InternalEObject)simple).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNLABELLED_STATEMENT__SIMPLE, null, msgs);
      if (newSimple != null)
        msgs = ((InternalEObject)newSimple).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNLABELLED_STATEMENT__SIMPLE, null, msgs);
      msgs = basicSetSimple(newSimple, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNLABELLED_STATEMENT__SIMPLE, newSimple, newSimple));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public structured_statement getStructured()
  {
    return structured;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStructured(structured_statement newStructured, NotificationChain msgs)
  {
    structured_statement oldStructured = structured;
    structured = newStructured;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNLABELLED_STATEMENT__STRUCTURED, oldStructured, newStructured);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStructured(structured_statement newStructured)
  {
    if (newStructured != structured)
    {
      NotificationChain msgs = null;
      if (structured != null)
        msgs = ((InternalEObject)structured).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNLABELLED_STATEMENT__STRUCTURED, null, msgs);
      if (newStructured != null)
        msgs = ((InternalEObject)newStructured).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNLABELLED_STATEMENT__STRUCTURED, null, msgs);
      msgs = basicSetStructured(newStructured, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNLABELLED_STATEMENT__STRUCTURED, newStructured, newStructured));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.UNLABELLED_STATEMENT__SIMPLE:
        return basicSetSimple(null, msgs);
      case PascalPackage.UNLABELLED_STATEMENT__STRUCTURED:
        return basicSetStructured(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.UNLABELLED_STATEMENT__SIMPLE:
        return getSimple();
      case PascalPackage.UNLABELLED_STATEMENT__STRUCTURED:
        return getStructured();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.UNLABELLED_STATEMENT__SIMPLE:
        setSimple((simple_statement)newValue);
        return;
      case PascalPackage.UNLABELLED_STATEMENT__STRUCTURED:
        setStructured((structured_statement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNLABELLED_STATEMENT__SIMPLE:
        setSimple((simple_statement)null);
        return;
      case PascalPackage.UNLABELLED_STATEMENT__STRUCTURED:
        setStructured((structured_statement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNLABELLED_STATEMENT__SIMPLE:
        return simple != null;
      case PascalPackage.UNLABELLED_STATEMENT__STRUCTURED:
        return structured != null;
    }
    return super.eIsSet(featureID);
  }

} //unlabelled_statementImpl

/**
 * generated by Xtext 2.14.0.RC1
 */
package org.xtext.compiler.pascal.pascal.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.compiler.pascal.pascal.PascalPackage;
import org.xtext.compiler.pascal.pascal.constant_chr;
import org.xtext.compiler.pascal.pascal.unsigned_constant;
import org.xtext.compiler.pascal.pascal.unsigned_number;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>unsigned constant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.compiler.pascal.pascal.impl.unsigned_constantImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link org.xtext.compiler.pascal.pascal.impl.unsigned_constantImpl#getChar <em>Char</em>}</li>
 *   <li>{@link org.xtext.compiler.pascal.pascal.impl.unsigned_constantImpl#getString <em>String</em>}</li>
 *   <li>{@link org.xtext.compiler.pascal.pascal.impl.unsigned_constantImpl#getNil <em>Nil</em>}</li>
 * </ul>
 *
 * @generated
 */
public class unsigned_constantImpl extends MinimalEObjectImpl.Container implements unsigned_constant
{
  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected EList<unsigned_number> number;

  /**
   * The cached value of the '{@link #getChar() <em>Char</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChar()
   * @generated
   * @ordered
   */
  protected EList<constant_chr> char_;

  /**
   * The cached value of the '{@link #getString() <em>String</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected EList<String> string;

  /**
   * The cached value of the '{@link #getNil() <em>Nil</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNil()
   * @generated
   * @ordered
   */
  protected EList<String> nil;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected unsigned_constantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.UNSIGNED_CONSTANT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<unsigned_number> getNumber()
  {
    if (number == null)
    {
      number = new EObjectContainmentEList<unsigned_number>(unsigned_number.class, this, PascalPackage.UNSIGNED_CONSTANT__NUMBER);
    }
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<constant_chr> getChar()
  {
    if (char_ == null)
    {
      char_ = new EObjectContainmentEList<constant_chr>(constant_chr.class, this, PascalPackage.UNSIGNED_CONSTANT__CHAR);
    }
    return char_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getString()
  {
    if (string == null)
    {
      string = new EDataTypeEList<String>(String.class, this, PascalPackage.UNSIGNED_CONSTANT__STRING);
    }
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getNil()
  {
    if (nil == null)
    {
      nil = new EDataTypeEList<String>(String.class, this, PascalPackage.UNSIGNED_CONSTANT__NIL);
    }
    return nil;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__NUMBER:
        return ((InternalEList<?>)getNumber()).basicRemove(otherEnd, msgs);
      case PascalPackage.UNSIGNED_CONSTANT__CHAR:
        return ((InternalEList<?>)getChar()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__NUMBER:
        return getNumber();
      case PascalPackage.UNSIGNED_CONSTANT__CHAR:
        return getChar();
      case PascalPackage.UNSIGNED_CONSTANT__STRING:
        return getString();
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        return getNil();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__NUMBER:
        getNumber().clear();
        getNumber().addAll((Collection<? extends unsigned_number>)newValue);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__CHAR:
        getChar().clear();
        getChar().addAll((Collection<? extends constant_chr>)newValue);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__STRING:
        getString().clear();
        getString().addAll((Collection<? extends String>)newValue);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        getNil().clear();
        getNil().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__NUMBER:
        getNumber().clear();
        return;
      case PascalPackage.UNSIGNED_CONSTANT__CHAR:
        getChar().clear();
        return;
      case PascalPackage.UNSIGNED_CONSTANT__STRING:
        getString().clear();
        return;
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        getNil().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__NUMBER:
        return number != null && !number.isEmpty();
      case PascalPackage.UNSIGNED_CONSTANT__CHAR:
        return char_ != null && !char_.isEmpty();
      case PascalPackage.UNSIGNED_CONSTANT__STRING:
        return string != null && !string.isEmpty();
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        return nil != null && !nil.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (string: ");
    result.append(string);
    result.append(", nil: ");
    result.append(nil);
    result.append(')');
    return result.toString();
  }

} //unsigned_constantImpl
